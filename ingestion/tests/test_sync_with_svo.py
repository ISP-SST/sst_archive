import unittest
from pathlib import Path
from unittest import skip

from astropy.io import fits
from django.conf import settings
from django.test import TestCase

from data_access.utils import get_file_url
from ingestion.svo.svo_record import SvoRecord
from ingestion.svo.svo_api import SvoApi

from ingestion.svo.submit_to_svo import submit_to_svo
from ingestion.svo.sync_with_svo import sync_with_svo
from metadata.ingesters.ingest_fits_header import ingest_fits_header
from metadata.ingesters.ingest_metadata import ingest_metadata
from metadata.models import FITSHeader
from observations.ingesters.ingest_data_cube import ingest_observation_data_cube
from observations.models import Instrument, DataCube

PRIMARY_TEST_FITS_HEADER = """SIMPLE  =                    T / Written by IDL:  Sat Mar 20 11:00:01 2021      BITPIX  =                  -32 /                                                NAXIS   =                    5 / Number of data axes                            NAXIS1  =                 1173 / Number of positions along axis 1               NAXIS2  =                 1157 / Number of positions along axis 2               NAXIS3  =                   14 / Number of positions along axis 3               NAXIS4  =                    4 / Number of positions along axis 4               NAXIS5  =                    5 / Number of positions along axis 5               EXTEND  =                    T / The file has extension(s).                     DATEREF = '2019-04-19T00:00:00.000000' / Reference time in ISO-8601             PRSTEP1 = 'MOMFBD  '           / Processing step name                           PRPARA1 = '{"WAVELENGTH":"6.17300e-07","MODES":"2-6,9,10,7,8,14,15,11-13,20,21&'CONTINUE  ',18,19,16,17,27,28,25,26,22-24,35,36,33,34,44,45,31,32,29,30,54,55,&'CONTINUE  '42,43,40,41,37-39,65,66,52,53,50","BASIS":"Karhunen-Loeve","NEW_CON&'CONTINUE  'STRAINTS":"","FPMETHOD":"horint","SIM_X":[61,109,157,206,254,303,35&'CONTINUE  '1,400,448,497,545,593,642,690,739,787,836,884,933],"ARCSECPERPIX":"&'CONTINUE  '0.0592","GETSTEP":"getstep_conjugate_gradient","MAX_LOCAL_SHIFT":"3&'CONTINUE  '0","FAST_QR":"","FILE_TYPE":"MOMFBD","SIM_Y":[62,111,161,211,260,31&'CONTINUE  '0,360,410,459,509,559,608,658,708,758,807,857,907,957],"TRACE":"","&'CONTINUE  'TELESCOPE_D":"0.97","GET_PSF":"","OUTPUT_FILE":"results/camXX_2019-&'CONTINUE  '04-19T17:34:39_00004_6173","DATE_OBS":"2019-04-19","NUM_POINTS":"88&'CONTINUE  '","GET_PSF_AVG":"","IMAGE_NUMS":"7140:2:7170,7176:2:7206,7212:2:724&'CONTINUE  '2,7248:2:7278,7284:2:7314,7320:2:7350,7356:2:7386,7392:2:7422,7428:&'CONTINUE  '2:7458,7464:2:7494,7500:2:7530,7536:2:7566,7572:2:7602,7608:2:7638"&'CONTINUE  ',"PIXELSIZE":"1.60000e-05","GRADIENT":"gradient_diff"}&' / List of   CONTINUE  '' / parameters/options for PRPROC1                                   CADAVG  =              21.9216 / Average of actual cadence                      CADMIN  =              21.9216 / Minimum of actual cadence                      CADMAX  =              21.9216 / Maximum of actual cadence                      CADVAR  =          6.86365E-10 / Variance of actual cadence                     DATE-OBS= '2019-04-19T17:34:39' /  Data set timestamp                                                                                                           LONGSTRN= 'OGIP 1.0'           / The OGIP long string convention may be used.   INSTRUME= 'CRISP   '           /  Name of instrument                            TELCONFG= 'Schupmann, imaging' /  Telescope configuration                       OBSGEO-Z=              3051730 /  [m] SST location                              OBSGEO-Y=             -1718726 /  [m] SST location                              OBSGEO-X=              5327403 /  [m] SST location                              AO_NMODE=                   84 /  Number of AO corrected Mirror modes           OBSRVTRY= 'Observatorio del Roque de los Muchachos (ORM)' /  Name of observatoryTELESCOP= 'Swedish 1-meter Solar Telescope (SST)' /  Name of telescope          OBJECT  = 'Sun     '           /                                                STARTOBS= '2019-04-19T17:34:39' /                                               FILLED  =                    1 /  Missing pixels have been filled.              PC1_1   =              1.00000 / No rotations                                   PC2_2   =              1.00000 / No rotations                                   PC3_3   =              1.00000 / No rotations                                   PC4_4   =              1.00000 / No rotations                                   PC5_5   =              1.00000 / No rotations                                   CTYPE1  = 'HPLN-TAB'           / Helioprojective longitude                      CUNIT1  = 'arcsec  '           / Unit along axis 1                              CNAME1  = 'Spatial X'          /                                                PS1_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS1_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PS1_2   = 'HPLN-INDEX'         / TTYPE for INDEX                                PV1_3   =                    1 / Coord. 1 tabulated coordinate number           CRPIX1  =                    0 / Unity transform                                CRVAL1  =                    0 / Unity transform                                CDELT1  =                    1 / Unity transform                                CSYER1  =              60.0000 / [arcsec] Orientation known                     CTYPE2  = 'HPLT-TAB'           / Helioprojective latitude                       CUNIT2  = 'arcsec  '           / Unit along axis 2                              CNAME2  = 'Spatial Y'          /                                                PS2_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS2_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PS2_2   = 'HPLT-INDEX'         / TTYPE for INDEX                                PV2_3   =                    2 / Coord. 2 tabulated coordinate number           CRPIX2  =                    0 / Unity transform                                CRVAL2  =                    0 / Unity transform                                CDELT2  =                    1 / Unity transform                                CSYER2  =              60.0000 / [arcsec] Orientation known                     CTYPE3  = 'WAVE-TAB'           / Wavelength, function of tuning and scan number CNAME3  = 'Wavelength'         /                                                CUNIT3  = 'nm      '           / Wavelength unit, tabulated for dim. 3 and 5    PS3_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS3_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PV3_3   =                    3 / Coord. 3 tabulated coordinate number           CRPIX3  =                    0 / Unity transform                                CRVAL3  =                    0 / Unity transform                                CDELT3  =                    1 / Unity transform                                CWERR3  =           0.00795488 / [nm] Max total distortion                      CWDIS3  = 'Lookup  '           / WAVE distortions in lookup table               DW3     = 'EXTVER: 1'          / Extension version number                       DW3     = 'NAXES: 5'           / Number of axes in the extension                DW3     = 'AXIS.1: 1'          / Spatial X                                      DW3     = 'AXIS.2: 2'          / Spatial Y                                      DW3     = 'AXIS.3: 3'          / Tuning                                         DW3     = 'AXIS.4: 4'          / Stokes                                         DW3     = 'AXIS.5: 5'          / Scan number                                    DW3     = 'CWERR: 0.00795488'  / [nm] Max distortion (this correction step)     DW3     = 'CWDIS: 1'           / Distortions in lookup table                    DW3     = 'ASSOCIATE: 1'       / Association stage (pixel coordinates)          DW3     = 'APPLY: 6'           / Application stage (world coordinates)          CTYPE4  = 'STOKES  '           / Stokes vector [I,Q,U,V]                        CRPIX4  =                    1 / Index of Stokes components in pixel 1          CRVAL4  =                    1 / The first Stokes index is 1                    CDELT4  =                    1 / Stokes indices [1,2,3,4] --> [I,Q,U,V]         CTYPE5  = 'UTC--TAB'           / Time, function of tuning and scan number       CNAME5  = 'Time since DATEREF, increases with dim. 3 and 5' /                   CUNIT5  = 's       '           /                                                PS5_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS5_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PV5_3   =                    4 / Coord. 5 tabulated coordinate number           CRPIX5  =                    0 / Unity transform                                CRVAL5  =                    0 / Unity transform                                CDELT5  =                    1 / Unity transform                                OBS_HDU =                    1 /                                                BUNIT   = 'W m^-2 Hz^-1 sr^-1' / Units in array                                 BTYPE   = 'Intensity'          / Type of data in array                          FILTER1 = '6173    '           / Inferred from filename.                        WAVELNTH=              617.380 / [nm] Prefilter peak wavelength                 WAVEMIN =              617.155 / [nm] Prefilter min wavelength (0.5 peak)       WAVEMAX =              617.605 / [nm] Prefilter max wavelength (0.5 peak)       WAVEBAND= 'Fe I 6173'          /                                                WAVEUNIT=                   -9 / WAVELNTH in units 10^WAVEUNIT m = nm           PRLIB1  = 'momfbd/redux'       / Additional software library                    PRVER1  = '20201208.18'        / Library version/MJD of last update (From .momfbPRREF1  = 'DATE: 2020-12-30T13:15:42' / When this step was performed            PRBRA1  = 'master  '           / Version control branch                         PRSTEP2 = 'DEMODULATION'       / Processing step name                           PRPROC2 = 'crisp::demodulate'  / Name of procedure used                         PRPARA2 = '{"NBRFAC":3.701677895171844e-11,"NBTFAC":3.512923263566968e-11,"SMO&'CONTINUE  'OTH_BY_KERNEL":5,"SMOOTH_BY_SUBFIELD":0,"TILES":[8,16,32,64,128],"C&'CONTINUE  'LIPS":[8,4,2,1,1]}' / List of parameters/options for PRPROC2         PRLIB2  = 'reduxdlm'           / Additional software library                    PRVER2  = '1.0.18-13'          / Library version/MJD of last update             PRREF2  = 'DATE: 2021-05-26T19:18:00' / When this step was performed            PRBRA2  = 'master  '           / Version control branch                         PRSTEP3 = 'CONCATENATION'      / Processing step name                           PRPROC3 = 'crisp::make_nb_cube' / Name of procedure used                        PRPARA3 = '{"NOCROSSTALK":1,"REDEMODULATE":1,"WCFILE":"cubes_wb/wb_6173_2019-0&'CONTINUE  '4-19T17:34:39_scans=0-4_corrected_im.fits","INTENSITYCORRMETHOD":"o&'CONTINUE  'ld","NOMISSING_NANS":1}' / List of parameters/options for PRPROC3    PRREF3A = 'DATE: 2021-05-26T20:04:16' / When this step was performed            PRLIB3  = 'SSTRED  '           / Software library containing crisp::make_nb_cubePRVER3  = '1.1.0-632'          / Library version/MJD of last update             PRLIB3A = 'IDLAstro'           / Additional software library                    PRVER3A = '392     '           / Library version/MJD of last update             PRLIB3B = 'Coyote  '           / Additional software library                    PRVER3B = '1154    '           / Library version/MJD of last update             PRLIB3C = 'mpfit   '           / Additional software library                    PRVER3C = '2017-01-03'         / Library version/MJD of last update             PRLIB3D = 'reduxdlm'           / Additional software library                    PRVER3D = '1.0.18-13'          / Library version/MJD of last update             PRBRA3  = 'master  '           / Version control branch                         PRSTEP4 = 'CALIBRATION-INTENSITY-SPECTRAL' / Processing step name               PRPROC4 = 'crisp::make_nb_cube' / Name of procedure used                        PRPARA4 = '{"NOCROSSTALK":1,"REDEMODULATE":1,"WCFILE":"cubes_wb/wb_6173_2019-0&'CONTINUE  '4-19T17:34:39_scans=0-4_corrected_im.fits","INTENSITYCORRMETHOD":"o&'CONTINUE  'ld","NOMISSING_NANS":1}' / List of parameters/options for PRPROC4    PRREF4  = 'Hamburg FTS spectral atlas (Neckel 1999)' /                          PRREF4A = 'Calibration data from 11:29:43' /                                    PRREF4B = 'DATE: 2021-05-26T20:04:16' / When this step was performed            PRLIB4  = 'SSTRED  '           / Software library containing crisp::make_nb_cubePRVER4  = '1.1.0-632'          / Library version/MJD of last update             PRLIB4A = 'IDLAstro'           / Additional software library                    PRVER4A = '392     '           / Library version/MJD of last update             PRLIB4B = 'Coyote  '           / Additional software library                    PRVER4B = '1154    '           / Library version/MJD of last update             PRLIB4C = 'mpfit   '           / Additional software library                    PRVER4C = '2017-01-03'         / Library version/MJD of last update             PRLIB4D = 'reduxdlm'           / Additional software library                    PRVER4D = '1.0.18-13'          / Library version/MJD of last update             PRBRA4  = 'master  '           / Version control branch                         PRSTEP5 = 'CALIBRATION-INTENSITY-TEMPORAL' / Processing step name               PRPROC5 = 'red::fitscube_intensitycorr' / Name of procedure used                PRMODE5 = 'LOCAL   '           / Processing mode                                PRPARA5 = '{"FILENAME":"/scratch/olexa/2019-04-19/CRISP//cubes_nb/nb_6173_2019&'CONTINUE  '-04-19T17:34:39_scans=0-4_stokes_corrected_im.fits"}&' / List of     CONTINUE  '' / parameters/options for PRPROC5                                   PRREF5  = 'Mean DC WB median intensity in counts from prefilter fit data : 708&'CONTINUE  '.43523' /                                                            PRREF5A = 'DATE: 2021-05-26T20:06:18' / When this step was performed            PRLIB5  = 'SSTRED  '           / Software library containing red::fitscube_intenPRVER5  = '1.1.0-632'          / Library version/MJD of last update             PRLIB5A = 'IDLAstro'           / Additional software library                    PRVER5A = '392     '           / Library version/MJD of last update             PRLIB5B = 'Coyote  '           / Additional software library                    PRVER5B = '1154    '           / Library version/MJD of last update             PRLIB5C = 'mpfit   '           / Additional software library                    PRVER5C = '2017-01-03'         / Library version/MJD of last update             PRLIB5D = 'reduxdlm'           / Additional software library                    PRVER5D = '1.0.18-13'          / Library version/MJD of last update             PRBRA5  = 'master  '           / Version control branch                         PRSTEP6 = 'STOKES-CROSSTALK-CORRECTION' / Processing step name                  PRPROC6 = 'red::fitscube_crosstalk' / Name of procedure used                    PRPARA6 = '{"MARGIN":50,"TUNING_SELECTION":[0]}&'                               CONTINUE  '' / List of parameters/options for PRPROC6                           PRREF6  = 'DATE: 2021-05-26T21:27:31' / When this step was performed            PRLIB6  = 'SSTRED  '           / Software library containing red::fitscube_crossPRVER6  = '1.1.0-632'          / Library version/MJD of last update             PRLIB6A = 'IDLAstro'           / Additional software library                    PRVER6A = '392     '           / Library version/MJD of last update             PRLIB6B = 'Coyote  '           / Additional software library                    PRVER6B = '1154    '           / Library version/MJD of last update             PRLIB6C = 'mpfit   '           / Additional software library                    PRVER6C = '2017-01-03'         / Library version/MJD of last update             PRLIB6D = 'reduxdlm'           / Additional software library                    PRVER6D = '1.0.18-13'          / Library version/MJD of last update             PRBRA6  = 'master  '           / Version control branch                         PRSTEP7 = 'HEADER-CORRECTION'  / Processing step name                           PRPROC7 = 'red::fitscube_finalize' / Name of procedure used                     PRPARA7 = '{"KEYWORDS":{"OBSERVER":"Nazaret Bello Gonzales, Philip Lindner"}}&' CONTINUE  '' / List of parameters/options for PRPROC7                           PRREF7  = 'DATE: 2021-05-28T15:39:52' / When this step was performed            PRLIB7  = 'SSTRED  '           / Software library containing red::fitscube_finalPRVER7  = '1.1.0-632'          / Library version/MJD of last update             PRLIB7A = 'IDLAstro'           / Additional software library                    PRVER7A = '392     '           / Library version/MJD of last update             PRLIB7B = 'Coyote  '           / Additional software library                    PRVER7B = '1154    '           / Library version/MJD of last update             PRLIB7C = 'mpfit   '           / Additional software library                    PRVER7C = '2017-01-03'         / Library version/MJD of last update             PRLIB7D = 'reduxdlm'           / Additional software library                    PRVER7D = '1.0.18-13'          / Library version/MJD of last update             PRBRA7  = 'master  '           / Version control branch                         CAMERA  = 'Crisp-T,Crisp-R'    /                                                DETECTOR= 'camXIX,camXXV'      /                                                TIMESYS = 'UTC     '           /                                                DATE    = '2021-05-28T15:08:12' / Creation UTC date of FITS header              FILENAME= 'nb_6173_2019-04-19T17:34:39_scans=0-4_stokes_corrected_export2021-0&'CONTINUE  '5-28T15:08:12_im.fits' /                                             VAR_KEYS= 'VAR-EXT-DATE-BEG;DATE-BEG,VAR-EXT-DATE-END;DATE-END,VAR-EXT-DATE-AV&'CONTINUE  'G;DATE-AVG,VAR-EXT-RESPAPPL;RESPAPPL,VAR-EXT-SCANNUM;SCANNUM,VAR-EX&'CONTINUE  'T-ATMOS_R0;ATMOS_R0,VAR-EXT-AO_LOCK;AO_LOCK,VAR-EXT-ELEV_ANG;ELEV_A&'CONTINUE  'NG,VAR-EXT-XPOSURE;XPOSURE,VAR-EXT-TEXPOSUR;TEXPOSUR,VAR-EXT-NSUMEX&'CONTINUE  'P;NSUMEXP,VAR-EXT-DATAMAD;DATAMAD,VAR-EXT-DATAKURT;DATAKURT,VAR-EXT&'CONTINUE  '-DATASKEW;DATASKEW,VAR-EXT-DATANRMS;DATANRMS,VAR-EXT-DATAMEAN;DATAM&'CONTINUE  'EAN,VAR-EXT-DATAMAX;DATAMAX,VAR-EXT-DATAMIN;DATAMIN,VAR-EXT-NDATAPI&'CONTINUE  'X;NDATAPIX,VAR-EXT-DATAP01;DATAP01,VAR-EXT-DATAP02;DATAP02,VAR-EXT-&'CONTINUE  'DATAP05;DATAP05,VAR-EXT-DATAP10;DATAP10,VAR-EXT-DATAP25;DATAP25,VAR&'CONTINUE  '-EXT-DATAMEDN;DATAMEDN,VAR-EXT-DATAP75;DATAP75,VAR-EXT-DATAP90;DATA&'CONTINUE  'P90,VAR-EXT-DATAP95;DATAP95,VAR-EXT-DATAP98;DATAP98,VAR-EXT-DATAP99&'CONTINUE  ';DATAP99' / SOLARNET variable-keywords                               SOLARNET=                    1 / SOLARNET compliant file                        OBSERVER= 'Nazaret Bello Gonzales, Philip Lindner' /                            RELEASE = '2020-08-05'         /                                                RELEASEC= 'Data acquired within the SOLARNET Trans-National Access programme w&'CONTINUE  'ith funding from the European Union''s Horizon2020 research and inn&'CONTINUE  'ovation programme under grant agreement no 824135. PI: Philip Lindn&'CONTINUE  'er. See https://dubshen.astro.su.se/wiki/index.php/Science_data.' /  WCSNAMEA= 'AVERAGED APPROXIMATE HPLN-TAN/HPLT-TAN CENTER POINT' /               CRPIX1A =              587.000 / Center pixel of image array                    CRPIX2A =              579.000 / Center pixel of image array                    CRVAL1A =        708.465683121 / [arcsec] Coordinates of center of image array  CRVAL2A =        134.521699788 / [arcsec] Coordinates of center of image array  CDELT1A =              0.00000 / Zero FOV extent                                CDELT2A =              0.00000 / Zero FOV extent                                DATE-BEG= '2019-04-19T17:34:55.50395&'                                          CONTINUE  '' / Beginning time of observation (first value)                      DATE-END= '2019-04-19T17:36:30.03073' / End time of observation (last value)    DATE-AVG= '2019-04-19T17:35:42.76733&'                                          CONTINUE  '' / Average time of observation (provided value)                     RESPAPPL=        36400236941.0 / Mean of applied response function (mean value) SCANNUM =                    0 / Scan number (first value)                      ATMOS_R0=      0.0833495000000 / Atmospheric coherence length (mean value)      AO_LOCK =       0.934098000000 / Fraction of time the AO was locking, 2s averageELEV_ANG=        26.2324000000 / Elevation angle (mean value)                   XPOSURE =       0.277752000000 / Summed exposure times (median value)           TEXPOSUR=      0.0173595000000 / [s] Single-exposure time (median value)        NSUMEXP =        16.0000000000 / Number of summed exposures (median value)      DATAMAD =    1.25612736581E-08 / The mean absolute deviation from the mean (provDATAKURT=      -0.167994702696 / The excess kurtosis of the data (provided valueDATASKEW=        1.29221057381 / The skewness of the data (provided value)      DATANRMS=        1.77306898707 / The normalized RMS deviation from the mean (proDATAMEAN=    8.37219023298E-09 / The average data value (provided value)        DATAMAX =          5.32761E-08 / The maximum data value (provided value)        DATAMIN =         -1.42056E-08 / The minimum data value (provided value)        NDATAPIX=            251768440 / Number of pixels (provided value)              DATAP01 =   -3.03432385815E-10 / The 01 percentile of the data (provided value) DATAP02 =   -1.94000020633E-10 / The 02 percentile of the data (provided value) DATAP05 =   -1.26785738363E-10 / The 05 percentile of the data (provided value) DATAP10 =   -8.76650255645E-11 / The 10 percentile of the data (provided value) DATAP25 =   -3.26868712784E-11 / The 25 percentile of the data (provided value) DATAMEDN=    3.11521557292E-11 / The 50 percentile of the data (provided value) DATAP75 =    5.12399989105E-09 / The 75 percentile of the data (provided value) DATAP90 =    3.67140713821E-08 / The 90 percentile of the data (provided value) DATAP95 =    3.88390493654E-08 / The 95 percentile of the data (provided value) DATAP98 =    4.06226014885E-08 / The 98 percentile of the data (provided value) DATAP99 =    4.17349560774E-08 / The 99 percentile of the data (provided value) DATASUM = '3747977843'         / data unit checksum updated 2021-05-28T15:09:27 CHECKSUM= 'jH7AjH61jH68jH68'   / HDU checksum updated 2021-05-28T15:09:27       PRREF3  = 'Align reference: wb_6173_2019-04-19T17:34:39_scans=0-4_corrected_ex&'CONTINUE  'port2021-05-28T15:08:12_im.fits' / WB cube file name                 COMMENT This FITS file may contain long string keyword values that are          COMMENT continued over multiple keywords. This convention uses the '&'          COMMENT character at the end of a string which is then continued on             COMMENT subsequent keywords whose name = 'CONTINUE'.                                                                                                                                                                                            COMMENT FITS (Flexible Image Transport System) format is defined in 'Astronomy  COMMENT and Astrophysics', volume 376, page 359; bibcode
PRIMARY_TEST_FITS_FILE_PATH = '/data/2019-04-19/CRISP/nb_6173_2019-04-19T17:34:39_scans=0-4_stokes_corrected_export2021-05-28T15:08:12_im.fits'
PRIMARY_TEST_OID = '2019-04-19T17:34:39_6173_0-4'
PRIMARY_TEST_INSTRUMENT = 'CRISP'

SECONDARY_TEST_FITS_HEADER = """SIMPLE  =                    T / Written by IDL:  Thu Mar 25 18:44:41 2021      BITPIX  =                  -32 /                                                NAXIS   =                    5 / Number of data axes                            NAXIS1  =                 1345 / Number of positions along axis 1               NAXIS2  =                 1347 / Number of positions along axis 2               NAXIS3  =                   20 / Number of positions along axis 3               NAXIS4  =                    4 / Number of positions along axis 4               NAXIS5  =                    5 / Number of positions along axis 5               EXTEND  =                    T / The file has extension(s).                     VAR_KEYS= 'VAR-EXT-DATE-BEG;DATE-BEG,VAR-EXT-DATE-END;DATE-END,VAR-EXT-DATE-AV&'CONTINUE  'G;DATE-AVG,VAR-EXT-RESPAPPL;RESPAPPL,VAR-EXT-SCANNUM;SCANNUM,VAR-EX&'CONTINUE  'T-ATMOS_R0;ATMOS_R0,VAR-EXT-AO_LOCK;AO_LOCK,VAR-EXT-ELEV_ANG;ELEV_A&'CONTINUE  'NG,VAR-EXT-XPOSURE;XPOSURE,VAR-EXT-TEXPOSUR;TEXPOSUR,VAR-EXT-NSUMEX&'CONTINUE  'P;NSUMEXP,VAR-EXT-DATAMAD;DATAMAD,VAR-EXT-DATAKURT;DATAKURT,VAR-EXT&'CONTINUE  '-DATASKEW;DATASKEW,VAR-EXT-DATANRMS;DATANRMS,VAR-EXT-DATAMEAN;DATAM&'CONTINUE  'EAN,VAR-EXT-DATAMAX;DATAMAX,VAR-EXT-DATAMIN;DATAMIN,VAR-EXT-NPIXELS&'CONTINUE  ';NPIXELS,VAR-EXT-DATAP01;DATAP01,VAR-EXT-DATAP02;DATAP02,VAR-EXT-DA&'CONTINUE  'TAP05;DATAP05,VAR-EXT-DATAP10;DATAP10,VAR-EXT-DATAP25;DATAP25,VAR-E&'CONTINUE  'XT-DATAMEDN;DATAMEDN,VAR-EXT-DATAP75;DATAP75,VAR-EXT-DATAP90;DATAP9&'CONTINUE  '0,VAR-EXT-DATAP95;DATAP95,VAR-EXT-DATAP98;DATAP98,VAR-EXT-DATAP99;D&'CONTINUE  'ATAP99' / SOLARNET variable-keywords                                 PC1_1   =              1.00000 / No rotations                                   PC2_2   =              1.00000 / No rotations                                   PC3_3   =              1.00000 / No rotations                                   PC4_4   =              1.00000 / No rotations                                   PC5_5   =              1.00000 / No rotations                                   CTYPE1  = 'HPLN-TAB'           / Helioprojective longitude                      CUNIT1  = 'arcsec  '           / Unit along axis 1                              CNAME1  = 'Spatial X'          /                                                PS1_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS1_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PS1_2   = 'HPLN-INDEX'         / TTYPE for INDEX                                PV1_3   =                    1 / Coord. 1 tabulated coordinate number           CRPIX1  =                    0 / Unity transform                                CRVAL1  =                    0 / Unity transform                                CDELT1  =                    1 / Unity transform                                CSYER1  =              60.0000 / [arcsec] Orientation known                     CTYPE2  = 'HPLT-TAB'           / Helioprojective latitude                       CUNIT2  = 'arcsec  '           / Unit along axis 2                              CNAME2  = 'Spatial Y'          /                                                PS2_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS2_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PS2_2   = 'HPLT-INDEX'         / TTYPE for INDEX                                PV2_3   =                    2 / Coord. 2 tabulated coordinate number           CRPIX2  =                    0 / Unity transform                                CRVAL2  =                    0 / Unity transform                                CDELT2  =                    1 / Unity transform                                CSYER2  =              60.0000 / [arcsec] Orientation known                     CTYPE3  = 'WAVE-TAB'           / Wavelength, function of tuning and scan number CNAME3  = 'Wavelength'         /                                                CUNIT3  = 'nm      '           / Wavelength unit, tabulated for dim. 3 and 5    PS3_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS3_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PV3_3   =                    3 / Coord. 3 tabulated coordinate number           CRPIX3  =                    0 / Unity transform                                CRVAL3  =                    0 / Unity transform                                CDELT3  =                    1 / Unity transform                                CWERR3  =           0.00677496 / [nm] Max total distortion                      CWDIS3  = 'Lookup  '           / WAVE distortions in lookup table               HIERARCH DW3 NAME = 'Cavity error' / Type of correction                         HIERARCH DW3 EXTVER = 1        / Extension version number                       HIERARCH DW3 NAXES = 5         / Number of axes in the extension                HIERARCH DW3 AXIS1 = 1         / Spatial X                                      HIERARCH DW3 AXIS2 = 2         / Spatial Y                                      HIERARCH DW3 AXIS3 = 3         / Tuning                                         HIERARCH DW3 AXIS4 = 4         / Stokes                                         HIERARCH DW3 AXIS5 = 5         / Scan number                                    HIERARCH DW3 CWERR = 0.00677496 / [nm] Max distortion (this correction step)    HIERARCH DW3 CWDIS LOOKUP = 1  / Distortions in lookup table                    HIERARCH DW3 ASSOCIATE = 1     / Association stage (pixel coordinates)          HIERARCH DW3 APPLY = 6         / Application stage (world coordinates)          DW3     = 'EXTVER: 1'          / Extension version number                       DW3     = 'NAXES: 5'           / Number of axes in the extension                DW3     = 'AXIS.1: 1'          / Spatial X                                      DW3     = 'AXIS.2: 2'          / Spatial Y                                      DW3     = 'AXIS.3: 3'          / Tuning                                         DW3     = 'AXIS.4: 4'          / Stokes                                         DW3     = 'AXIS.5: 5'          / Scan number                                    DW3     = 'CWERR: 0.00677496'  / [nm] Max distortion (this correction step)     DW3     = 'CWDIS.LOOKUP: 1'    / Distortions in lookup table                    DW3     = 'ASSOCIATE: 1'       / Association stage (pixel coordinates)          DW3     = 'APPLY: 6'           / Application stage (world coordinates)          CTYPE4  = 'STOKES  '           / Stokes vector [I,Q,U,V]                        CRPIX4  =                    1 / Index of Stokes components in pixel 1          CRVAL4  =                    1 / The first Stokes index is 1                    CDELT4  =                    1 / Stokes indices [1,2,3,4] --> [I,Q,U,V]         CTYPE5  = 'UTC--TAB'           / Time, function of tuning and scan number       CNAME5  = 'Time since DATEREF, increases with dim. 3 and 5' /                   CUNIT5  = 's       '           /                                                PS5_0   = 'WCS-TAB '           / EXTNAME; EXTVER=EXTLEVEL=1 is default          PS5_1   = 'HPLN+HPLT+WAVE+TIME' / TTYPE for column w/coordinates                PV5_3   =                    4 / Coord. 5 tabulated coordinate number           CRPIX5  =                    0 / Unity transform                                CRVAL5  =                    0 / Unity transform                                CDELT5  =                    1 / Unity transform                                OBS_HDU =                    1 /                                                BUNIT   = 'W m^-2 Hz^-1 sr^-1' / Units in array                                 BTYPE   = 'Intensity'          / Type of data in array                          FILTER1 = '8542    '           / Inferred from filename.                        WAVELNTH=              854.100 / [nm] Prefilter peak wavelength                 WAVEMIN =              853.635 / [nm] Prefilter min wavelength (0.5 peak)       WAVEMAX =              854.565 / [nm] Prefilter max wavelength (0.5 peak)       WAVEBAND= 'Ca II 8542'         /                                                WAVEUNIT=                   -9 / WAVELNTH in units 10^WAVEUNIT m = nm           DATEREF = '2019-04-18T00:00:00.000000' / Reference time in ISO-8601             PRSTEP1 = 'MOMFBD  '           / Processing step name                           PRMODE1 = 'Phase Diversity'    / Processing mode                                PRPARA1 = '{"WAVELENGTH":"8.54200e-07","MODES":[2,3,4,5,6,9,10,7,8,14,15,11,12&'CONTINUE  ',13,20,21,18,19,16,17,27,28,25,26,22,23,24,35,36,33,34,44,45,31,32,&'CONTINUE  '29,30,54,55,42,43,40,41,37,38,39,65,66,52,53,50],"BASIS":"Karhunen-&'CONTINUE  'Loeve","NEW_CONSTRAINTS":"","FPMETHOD":"horint","SIM_X":[61,109,157&'CONTINUE  ',206,254,303,351,400,448,497,545,593,642,690,739,787,836,884,933],"&'CONTINUE  'ARCSECPERPIX":"0.0592","GETSTEP":"getstep_conjugate_gradient","MAX_&'CONTINUE  'LOCAL_SHIFT":"30","FAST_QR":"","FILE_TYPE":"MOMFBD","SIM_Y":[62,111&'CONTINUE  ',161,211,260,310,360,410,459,509,559,608,658,708,758,807,857,907,95&'CONTINUE  '7],"TRACE":"","TELESCOPE_D":"0.97","GET_PSF":"","OUTPUT_FILE":"resu&'CONTINUE  'lts/camXX_2019-04-18T10:37:30_00004_8542","DATE_OBS":"2019-04-18","&'CONTINUE  'NUM_POINTS":"88","GET_PSF_AVG":"","IMAGE_NUMS":[6136,6138,6140,6142&'CONTINUE  ',6144,6146,6148,6150,6152,6154,6156,6158,6160,6162,6164,6166,6168,6&'CONTINUE  '170,6172,6174,6176,6178,6180,6182,6184,6186,6188,6190,6196,6198,620&'CONTINUE  '0,6202,6204,6206,6208,6210,6212,6214,6216,6218,6220,6222,6224,6226,&'CONTINUE  '6228,6230,6232,6234,6236,6238,6240,6242,6244,6246,6248,6250,6256,62&'CONTINUE  '58,6260,6262,6264,6266,6268,6270,6272,6274,6276,6278,6280,6282,6284&'CONTINUE  ',6286,6288,6290,6292,6294,6296,6298,6300,6302,6304,6306,6308,6310,6&'CONTINUE  '316,6318,6320,6322,6324,6326,6328,6330,6332,6334,6336,6338,6340,634&'CONTINUE  '2,6344,6346,6348,6350,6352,6354,6356,6358,6360,6362,6364,6366,6368,&'CONTINUE  '6370,6376,6378,6380,6382,6384,6386,6388,6390,6392,6394,6396,6398,64&'CONTINUE  '00,6402,6404,6406,6408,6410,6412,6414,6416,6418,6420,6422,6424,6426&'CONTINUE  ',6428,6430,6436,6438,6440,6442,6444,6446,6448,6450,6452,6454,6456,6&'CONTINUE  '458,6460,6462,6464,6466,6468,6470,6472,6474,6476,6478,6480,6482,648&'CONTINUE  '4,6486,6488,6490,6496,6498,6500,6502,6504,6506,6508,6510,6512,6514,&'CONTINUE  '6516,6518,6520,6522,6524,6526,6528,6530,6532,6534,6536,6538,6540,65&'CONTINUE  '42,6544,6546,6548,6550,6556,6558,6560,6562,6564,6566,6568,6570,6572&'CONTINUE  ',6574,6576,6578,6580,6582,6584,6586,6588,6590,6592,6594,6596,6598,6&'CONTINUE  '600,6602,6604,6606,6608,6610,6616,6618,6620,6622,6624,6626,6628,663&'CONTINUE  '0,6632,6634,6636,6638,6640,6642,6644,6646,6648,6650,6652,6654,6656,&'CONTINUE  '6658,6660,6662,6664,6666,6668,6670,6676,6678,6680,6682,6684,6686,66&'CONTINUE  '88,6690,6692,6694,6696,6698,6700,6702,6704,6706,6708,6710,6712,6714&'CONTINUE  ',6716,6718,6720,6722,6724,6726,6728,6730,6736,6738,6740,6742,6744,6&'CONTINUE  '746,6748,6750,6752,6754,6756,6758,6760,6762,6764,6766,6768,6770,677&'CONTINUE  '2,6774,6776,6778,6780,6782,6784,6786,6788,6790,6796,6798,6800,6802,&'CONTINUE  '6804,6806,6808,6810,6812,6814,6816,6818,6820,6822,6824,6826,6832,68&'CONTINUE  '34,6836,6838,6840,6842,6844,6846,6848,6850,6852,6854,6856,6858,6860&'CONTINUE  ',6862,6868,6870,6872,6874,6876,6878,6880,6882,6884,6886,6888,6890,6&'CONTINUE  '892,6894,6896,6898,6904,6906,6908,6910,6912,6914,6916,6918,6920,692&'CONTINUE  '2,6924,6926,6928,6930,6932,6934,6940,6942,6944,6946,6948,6950,6952,&'CONTINUE  '6954,6956,6958,6960,6962,6964,6966,6968,6970,6976,6978,6980,6982,69&'CONTINUE  '84,6986,6988,6990,6992,6994,6996,6998,7000,7002,7004,7006,7012,7014&'CONTINUE  ',7016,7018,7020,7022,7024,7026,7028,7030,7032,7034,7036,7038,7040,7&'CONTINUE  '042,7048,7050,7052,7054,7056,7058,7060,7062,7064,7066,7068,7070,707&'CONTINUE  '2,7074,7076,7078,7084,7086,7088,7090,7092,7094,7096,7098,7100,7102,&'CONTINUE  '7104,7106,7108,7110,7112,7114],"PIXELSIZE":"1.60000e-05","GRADIENT"&'CONTINUE  ':"gradient_diff"}' / List of parameters/options for PRPROC1          CADAVG  =              21.9216 / Average of actual cadence                      CADMIN  =              21.9216 / Minimum of actual cadence                      CADMAX  =              21.9216 / Maximum of actual cadence                      CADVAR  =          1.70682E-10 / Variance of actual cadence                     DATE-OBS= '2019-04-18T10:37:30' /  Data set timestamp                                                                                                           LONGSTRN= 'OGIP 1.0'           / The OGIP long string convention may be used.   INSTRUME= 'CRISP   '           /  Name of instrument                            TELCONFG= 'Schupmann, imaging' /  Telescope configuration                       OBSGEO-Z=              3051730 /  [m] SST location                              OBSGEO-Y=             -1718726 /  [m] SST location                              OBSGEO-X=              5327403 /  [m] SST location                              AO_NMODE=                   84 /  Number of AO corrected Mirror modes           OBSRVTRY= 'Observatorio del Roque de los Muchachos (ORM)' /  Name of observatoryTELESCOP= 'Swedish 1-meter Solar Telescope (SST)' /  Name of telescope          OBJECT  = 'Sun     '           /                                                STARTOBS= '2019-04-18T10:37:30' /                                               FILLED  =                    1 /  Missing pixels have been filled.              PRLIB1  = 'momfbd/redux'       / Additional software library                    PRVER1  = '20201208.18'        / Library version/MJD of last update (From .momfbPRBRA1  = 'master  '           / Version control branch                         PRSTEP2 = 'DEMODULATION'       / Processing step name                           PRPROC2 = 'crisp::demodulate'  / Name of procedure used                         PRPARA2 = '{"NBRFAC":3.173047784575292e-11,"NBTFAC":3.535063731085518e-11,"SMO&'CONTINUE  'OTH_BY_KERNEL":5,"SMOOTH_BY_SUBFIELD":0,"TILES":[8,16,32,64,128],"C&'CONTINUE  'LIPS":[8,4,2,1,1]}' / List of parameters/options for PRPROC2         PRLIB2  = 'reduxdlm'           / Additional software library                    PRVER2  = '1.0.18-12'          / Library version/MJD of last update             PRREF2  = 'DATE: 2021-01-05T19:25:11' / When this step was performed            PRBRA2  = 'master  '           / Version control branch                         PRSTEP3 = 'CONCATENATION'      / Processing step name                           PRPROC3 = 'crisp::make_nb_cube' / Name of procedure used                        PRPARA3 = '{"WCFILE":"cubes_wb/wb_8542_2019-04-18T10:37:30_scans=0-4_corrected&'CONTINUE  '_im.fits","INTENSITYCORRMETHOD":"old","NOMISSING_NANS":1}&' / List ofCONTINUE  '' / parameters/options for PRPROC3                                   PRREF3A = 'DATE: 2021-03-25T18:52:52' / When this step was performed            PRLIB3  = 'SSTRED  '           / Software library containing crisp::make_nb_cubePRVER3  = '1.1.0-589'          / Library version/MJD of last update             PRLIB3A = 'IDLAstro'           / Additional software library                    PRVER3A = '392     '           / Library version/MJD of last update             PRLIB3B = 'Coyote  '           / Additional software library                    PRVER3B = '1154    '           / Library version/MJD of last update             PRLIB3C = 'mpfit   '           / Additional software library                    PRVER3C = '2017-01-03'         / Library version/MJD of last update             PRLIB3D = 'reduxdlm'           / Additional software library                    PRVER3D = '1.0.18-13'          / Library version/MJD of last update             PRBRA3  = 'master  '           / Version control branch                         PRSTEP4 = 'CALIBRATION-INTENSITY-SPECTRAL' / Processing step name               PRPROC4 = 'crisp::make_nb_cube' / Name of procedure used                        PRPARA4 = '{"WCFILE":"cubes_wb/wb_8542_2019-04-18T10:37:30_scans=0-4_corrected&'CONTINUE  '_im.fits","INTENSITYCORRMETHOD":"old","NOMISSING_NANS":1}&' / List ofCONTINUE  '' / parameters/options for PRPROC4                                   PRREF4  = 'Hamburg FTS spectral atlas (Neckel 1999)' /                          PRREF4A = 'Calibration data from 11:58:50' /                                    PRREF4B = 'DATE: 2021-03-25T18:52:52' / When this step was performed            PRLIB4  = 'SSTRED  '           / Software library containing crisp::make_nb_cubePRVER4  = '1.1.0-589'          / Library version/MJD of last update             PRLIB4A = 'IDLAstro'           / Additional software library                    PRVER4A = '392     '           / Library version/MJD of last update             PRLIB4B = 'Coyote  '           / Additional software library                    PRVER4B = '1154    '           / Library version/MJD of last update             PRLIB4C = 'mpfit   '           / Additional software library                    PRVER4C = '2017-01-03'         / Library version/MJD of last update             PRLIB4D = 'reduxdlm'           / Additional software library                    PRVER4D = '1.0.18-13'          / Library version/MJD of last update             PRBRA4  = 'master  '           / Version control branch                         PRSTEP5 = 'CALIBRATION-INTENSITY-TEMPORAL' / Processing step name               PRPROC5 = 'red::fitscube_intensitycorr' / Name of procedure used                PRMODE5 = 'LOCAL   '           / Processing mode                                PRPARA5 = '{"FILENAME":"/scratch/olexa/2019-04-18/CRISP//cubes_nb/nb_8542_2019&'CONTINUE  '-04-18T10:37:30_scans=0-4_stokes_corrected_im.fits"}&' / List of     CONTINUE  '' / parameters/options for PRPROC5                                   PRREF5  = 'Mean DC WB median intensity in counts from prefilter fit data : 229&'CONTINUE  '.94918' /                                                            PRREF5A = 'DATE: 2021-03-25T18:56:21' / When this step was performed            PRLIB5  = 'SSTRED  '           / Software library containing red::fitscube_intenPRVER5  = '1.1.0-589'          / Library version/MJD of last update             PRLIB5A = 'IDLAstro'           / Additional software library                    PRVER5A = '392     '           / Library version/MJD of last update             PRLIB5B = 'Coyote  '           / Additional software library                    PRVER5B = '1154    '           / Library version/MJD of last update             PRLIB5C = 'mpfit   '           / Additional software library                    PRVER5C = '2017-01-03'         / Library version/MJD of last update             PRLIB5D = 'reduxdlm'           / Additional software library                    PRVER5D = '1.0.18-13'          / Library version/MJD of last update             PRBRA5  = 'master  '           / Version control branch                         PRSTEP6 = 'STOKES-CROSSTALK-CORRECTION' / Processing step name                  PRPROC6 = 'red::fitscube_crosstalk' / Name of procedure used                    PRREF6  = 'DATE: 2021-03-25T19:18:29' / When this step was performed            PRLIB6  = 'SSTRED  '           / Software library containing red::fitscube_crossPRVER6  = '1.1.0-589'          / Library version/MJD of last update             PRLIB6A = 'IDLAstro'           / Additional software library                    PRVER6A = '392     '           / Library version/MJD of last update             PRLIB6B = 'Coyote  '           / Additional software library                    PRVER6B = '1154    '           / Library version/MJD of last update             PRLIB6C = 'mpfit   '           / Additional software library                    PRVER6C = '2017-01-03'         / Library version/MJD of last update             PRLIB6D = 'reduxdlm'           / Additional software library                    PRVER6D = '1.0.18-13'          / Library version/MJD of last update             PRBRA6  = 'master  '           / Version control branch                         PRSTEP7 = 'PADDING-CONVERSION' / Processing step name                           PRPROC7 = 'red::fitscube_missing' / Name of procedure used                      PRPARA7 = '{"FILENAME":"cubes_nb/nb_8542_2019-04-18T10:37:30_scans=0-4_stokes_&'CONTINUE  'corrected_im.fits"}' / List of parameters/options for PRPROC7        PRREF7  = 'Padding set to NaN' /                                                PRREF7A = 'DATE: 2021-03-25T21:03:10' / When this step was performed            PRLIB7  = 'SSTRED  '           / Software library containing red::fitscube_missiPRVER7  = '1.1.0-589'          / Library version/MJD of last update             PRLIB7A = 'IDLAstro'           / Additional software library                    PRVER7A = '392     '           / Library version/MJD of last update             PRLIB7B = 'Coyote  '           / Additional software library                    PRVER7B = '1154    '           / Library version/MJD of last update             PRLIB7C = 'mpfit   '           / Additional software library                    PRVER7C = '2017-01-03'         / Library version/MJD of last update             PRLIB7D = 'reduxdlm'           / Additional software library                    PRVER7D = '1.0.18-13'          / Library version/MJD of last update             PRBRA7  = 'master  '           / Version control branch                         PRSTEP8 = 'HEADER-CORRECTION'  / Processing step name                           PRPROC8 = 'red::fitscube_finalize' / Name of procedure used                     PRPARA8 = '{"KEYWORDS":{"OBSERVER":"Nazaret Bello Gonzales, Philip Lindner"}}' /PRREF8  = 'DATE: 2021-03-26T09:46:04' / When this step was performed            PRLIB8  = 'SSTRED  '           / Software library containing red::fitscube_finalPRVER8  = '1.1.0-589'          / Library version/MJD of last update             PRLIB8A = 'IDLAstro'           / Additional software library                    PRVER8A = '392     '           / Library version/MJD of last update             PRLIB8B = 'Coyote  '           / Additional software library                    PRVER8B = '1154    '           / Library version/MJD of last update             PRLIB8C = 'mpfit   '           / Additional software library                    PRVER8C = '2017-01-03'         / Library version/MJD of last update             PRLIB8D = 'reduxdlm'           / Additional software library                    PRVER8D = '1.0.18-13'          / Library version/MJD of last update             PRBRA8  = 'master  '           / Version control branch                         CAMERA  = 'Crisp-T,Crisp-R'    /                                                DETECTOR= 'camXIX,camXXV'      /                                                DW3 EXTV= 'del     '           / del                                            DW3 NAXE= 'del     '           / del                                            DW3 AXIS= 'del     '           / del                                            DW3 CWER= 'del     '           / del                                            DW3 CWDI= 'del     '           / del                                            DW3 ASSO= 'del     '           / del                                            DW3 APPL= 'del     '           / del                                            DATE-BEG= '2019-04-18T10:37:44.39789' / Beginning time of observation (first valDATE-END= '2019-04-18T10:39:08.56667' / End time of observation (last value)    DATE-AVG= '2019-04-18T10:38:22.77481' / Average time of observation (provided vaRESPAPPL=        22642600684.9 / Mean of applied response function (mean value) SCANNUM =                    0 / Scan number (first value)                      ATMOS_R0=      0.0979569000000 / Atmospheric coherence length (mean value)      AO_LOCK =       0.957170000000 / Fraction of time the AO was locking, 2s averageELEV_ANG=        50.3781000000 / Elevation angle (mean value)                   XPOSURE =       0.486017000000 / Summed exposure times (median value)           TEXPOSUR=      0.0173612000000 / [s] Single-exposure time (median value)        NSUMEXP =        28.0000000000 / Number of summed exposures (median value)      TIMESYS = 'UTC     '           /                                                DATE    = '2021-03-26T08:59:49' / Creation UTC date of FITS header              FILENAME= 'nb_8542_2019-04-18T10:37:30_scans=0-4_stokes_corrected_export2021-0&'CONTINUE  '3-26T08:59:49_im.fits' / MOM                                         SOLARNET=                    1 / SOLARNET compliant file                        OBSERVER= 'Nazaret Bello Gonzales, Philip Lindner' /                            RELEASE = '2020-11-12'         /                                                RELEASEC= 'Data acquired within the SOLARNET Trans-National Access programme ' /WCSNAMEA= 'AVERAGED APPROXIMATE HPLN-TAN/HPLT-TAN CENTER POINT' /               CRPIX1A =              673.000 / Center pixel of image array                    CRPIX2A =              674.000 / Center pixel of image array                    CRVAL1A =        439.074573665 / [arcsec] Coordinates of center of image array  CRVAL2A =        169.617350714 / [arcsec] Coordinates of center of image array  CDELT1A =              0.00000 / Zero FOV extent                                CDELT2A =              0.00000 / Zero FOV extent                                DATAMAD =    4.80697788250E-09 / The mean absolute deviation from the mean (provDATAKURT=       0.524818830702 / The excess kurtosis of the data (provided valueDATASKEW=        1.46019103661 / The skewness of the data (provided value)      DATANRMS=        1.81461743482 / The normalized RMS deviation from the mean (proDATAMEAN=    3.21702259798E-09 / The average data value (provided value)        DATAMAX =          3.56144E-08 / The maximum data value (provided value)        DATAMIN =         -1.75665E-08 / The minimum data value (provided value)        NPIXELS =            359822400 / Number of pixels (provided value)              DATAP01 =   -1.35726076542E-10 / The 01 percentile of the data (provided value) DATAP02 =   -9.64238998132E-11 / The 02 percentile of the data (provided value) DATAP05 =   -5.95493479566E-11 / The 05 percentile of the data (provided value) DATAP10 =   -3.58238342940E-11 / The 10 percentile of the data (provided value) DATAP25 =   -4.20383490850E-12 / The 25 percentile of the data (provided value) DATAMEDN=    3.06753798667E-11 / The 50 percentile of the data (provided value) DATAP75 =    8.56327499860E-10 / The 75 percentile of the data (provided value) DATAP90 =    1.41771670907E-08 / The 90 percentile of the data (provided value) DATAP95 =    1.57146327469E-08 / The 95 percentile of the data (provided value) DATAP98 =    1.74247522236E-08 / The 98 percentile of the data (provided value) DATAP99 =    1.94399423554E-08 / The 99 percentile of the data (provided value) DATASUM = '4283325283'         / data unit checksum updated 2021-03-26T09:00:23 CHECKSUM= '5aaU8XaT5aaT5WaT'   / HDU checksum updated 2021-03-26T09:00:23       PRREF3  = 'Align reference: wb_8542_2019-04-18T10:37:30_scans=0-4_corrected_ex&'CONTINUE  'port2021-03-26T08:59:49_im.fits' / WB cube file name                 COMMENT This FITS file may contain long string keyword values that are          COMMENT continued over multiple keywords. This convention uses the '&'          COMMENT character at the end of a string which is then continued on             COMMENT subsequent keywords whose name = 'CONTINUE'.                                                                                                                                                                                            COMMENT FITS (Flexible Image Transport System) format is defined in 'Astronomy  COMMENT and Astrophysics', volume 376, page 359; bibcode 2001A&A...376..359H    END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             """
SECONDARY_TEST_FITS_FILE_PATH = '/data/2019-04-18/CRISP/nb_8542_2019-04-18T10:37:30_scans=0-4_stokes_corrected_export2021-03-26T08:59:49_im.fits'
SECONDARY_TEST_OID = '2019-04-18T10:37:30_8542_0-4'
SECONDARY_TEST_INSTRUMENT = 'CRISP'

# IMPORTANT: This test assumes a local, or otherwise controlled instance of the SOLARNET-service
#            is specified. DO NOT attempt to run this test against the production server with
#            valid production credentials. Part of the setUp phase of these tests clears metadata
#            and data_location entries from the database.
TEST_API_URL = 'http://localhost:8888/api/svo/'
TEST_API_USER = 'daniel'
TEST_API_KEY = 'eb00702a03a5e77114d5f254dde3c275261d7726'


@skip("By default we don't run SVO tests since they require a special local setup")
class TestSyncWithSvo(TestCase):
    """
    This test case requires an instance of the SOLARNET-service to be running and accessible.

    Right now it's preferred to set up the service and run this test locally. Automating this
    test will quickly become rather complicated and somewhat impractical. We would have to
    either:

     1. Set up a shared instance of the SVO that can be used during tests. We would have to
        update the tests to ensure that multiple instances of the test can be run simultaneously
        without causing issues.
     2. Create a mock that will pretend to be an SVO instance. This may sound enticing, but
        unfortunately there's quite a few endpoints that need to be mocked (data_location, keywords,
        dataset, *_metadata), and it also leaves us in a place where we have to worry about updating
        this mock whenever the SVO changes.
     3. Spin up a new instance of the SVO whenever the test is run. This is something that might
        become more feasible using Docker, but it's still going to require some effort.
    """

    def setUp(self):
        settings.HOSTNAME = 'http://localhost:80/'

        self.svo_api = SvoApi(TEST_API_URL, TEST_API_USER, TEST_API_KEY)
        self._clear_svo()

        Instrument.objects.bulk_create([Instrument(name='CHROMIS'), Instrument(name='CRISP')])
        instrument = Instrument.objects.get(name__iexact=PRIMARY_TEST_INSTRUMENT)

        path = Path(PRIMARY_TEST_FITS_FILE_PATH)

        fits_hdu = fits.header.Header.fromstring(PRIMARY_TEST_FITS_HEADER)

        self.primary_data_cube = ingest_observation_data_cube(path, instrument, fits_hdu, PRIMARY_TEST_OID,
                                                              file_size=10000000)

        ingest_metadata(fits_hdu, self.primary_data_cube)
        ingest_fits_header(fits_hdu, self.primary_data_cube)

        instrument2 = Instrument.objects.get(name__iexact=SECONDARY_TEST_INSTRUMENT)

        path = Path(SECONDARY_TEST_FITS_FILE_PATH)

        fits_hdu = fits.header.Header.fromstring(SECONDARY_TEST_FITS_HEADER)

        self.secondary_data_cube = ingest_observation_data_cube(path, instrument2, fits_hdu, SECONDARY_TEST_OID,
                                                              file_size=10000000)

        ingest_metadata(fits_hdu, self.secondary_data_cube)
        ingest_fits_header(fits_hdu, self.secondary_data_cube)

    def test_submit_new_data_cube(self):
        """
        Creates new metadata entry in the SVO, along with a corresponding data_location.
        """
        primary_fits_hdu = fits.header.Header.fromstring(PRIMARY_TEST_FITS_HEADER)
        submit_to_svo(self.primary_data_cube, primary_fits_hdu, api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        metadata = self._get_svo_record_metadata_for_data_cube(self.primary_data_cube)

        self.assertEqual(metadata['fits_header'].strip(), self.primary_data_cube.fits_header.fits_header.strip())
        self.assertEqual(metadata['date_beg'], '2019-04-19T17:34:55.503Z')
        self.assertEqual(metadata['data_location']['file_url'], get_file_url(self.primary_data_cube))

        # TODO(daniel): Compare a few more fields

    def test_submit_update_existing_data_cube_shared_data_location(self):
        """
        If a data_location in the SVO is shared between Metadata instances the submit_to_svo(), any updates
        to that data_location will cause a new data_location item to be created for the metadata that was updated.
        If the data_location was not shared, the existing instance will be updated with the new values.
        """
        primary_data_cube_hdu = fits.header.Header.fromstring(PRIMARY_TEST_FITS_HEADER)
        secondary_data_cube_hdu = fits.header.Header.fromstring(SECONDARY_TEST_FITS_HEADER)

        shared_file_url = 'https://dubshen.astro.su.se/data/'
        shared_file_path = '2019-07-01/CRISP'

        # Ingest the two files with a shared file URL. This mimics how files have been ingested into the SVO
        # as of 2021-10-12. Ensuring that the transition between this old way of ingesting and the new preferred
        # way works properly will hopefully make the procedure safe and seamless.
        submit_to_svo(self.primary_data_cube, primary_data_cube_hdu, file_path=shared_file_path,
                      file_url=shared_file_url, api_url=TEST_API_URL, username=TEST_API_USER, api_key=TEST_API_KEY)

        submit_to_svo(self.secondary_data_cube, secondary_data_cube_hdu, file_path=shared_file_path,
                      file_url=shared_file_url, api_url=TEST_API_URL, username=TEST_API_USER, api_key=TEST_API_KEY)

        # Store away the original IDs generated in the first sync. We'll use these to check that the
        # subsequent sync did the right thing.
        first_data_cube_metadata = self._get_svo_record_metadata_for_data_cube(self.primary_data_cube)
        second_data_cube_metadata = self._get_svo_record_metadata_for_data_cube(self.secondary_data_cube)

        old_first_data_cube_data_location_id = first_data_cube_metadata['data_location']['id']
        old_second_data_cube_data_location_id = second_data_cube_metadata['data_location']['id']

        # Update the URLs for the first entry and sync with SVO.
        submit_to_svo(self.primary_data_cube, primary_data_cube_hdu, api_url=TEST_API_URL, username=TEST_API_USER,
                      api_key=TEST_API_KEY)

        first_data_cube_metadata = self._get_svo_record_metadata_for_data_cube(self.primary_data_cube)
        second_data_cube_metadata = self._get_svo_record_metadata_for_data_cube(self.secondary_data_cube)

        # New data_location should have a new id, and should also have been updated with the new file URL.
        self.assertNotEqual(first_data_cube_metadata['data_location']['id'], old_first_data_cube_data_location_id)
        self.assertEqual(first_data_cube_metadata['data_location']['file_url'],
                         get_file_url(self.primary_data_cube))

        # Other data_location should still carry the old file URL.
        self.assertEqual(second_data_cube_metadata['data_location']['file_url'], shared_file_url)

        submit_to_svo(self.secondary_data_cube, secondary_data_cube_hdu, api_url=TEST_API_URL, username=TEST_API_USER,
                      api_key=TEST_API_KEY)

        second_data_cube_metadata = self._get_svo_record_metadata_for_data_cube(self.secondary_data_cube)

        self.assertEqual(second_data_cube_metadata['data_location']['file_url'], get_file_url(self.secondary_data_cube))
        self.assertEqual(second_data_cube_metadata['data_location']['id'], old_second_data_cube_data_location_id)

    def test_submit_update_existing_data_cube(self):
        """
        Submits a DataCube already submitted to the SVO. We expect the both the data in the metadata and the
        data_location in the SVO to be updated correspondingly.
        """
        primary_fits_hdu = fits.header.Header.fromstring(PRIMARY_TEST_FITS_HEADER)
        submit_to_svo(self.primary_data_cube, primary_fits_hdu, api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        self.primary_data_cube.size = 20000000
        self.primary_data_cube.save()

        updated_primary_fits_hdu = fits.header.Header.fromstring(PRIMARY_TEST_FITS_HEADER)
        updated_primary_fits_hdu['RELEASE'] = '2022-01-01'

        submit_to_svo(self.primary_data_cube, updated_primary_fits_hdu, api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        metadata = self._get_svo_record_metadata_for_data_cube(self.primary_data_cube)

        self.assertEqual(metadata['release'], '2022-01-01')
        self.assertEqual(metadata['data_location']['file_size'], str(self.primary_data_cube.size))

    def test_sync_data_cubes_add_missing_in_svo(self):
        """
        Add cubes to local database and check that these observations are submitted to the SVO.
        """
        primary_fits_hdu = fits.Header.fromstring(PRIMARY_TEST_FITS_HEADER)
        submit_to_svo(self.primary_data_cube, primary_fits_hdu, api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        all_metadata = self._get_all_svo_metadata(PRIMARY_TEST_INSTRUMENT)

        self.assertEqual(len(all_metadata), 1)
        self.assertEqual(all_metadata[0]['oid'], PRIMARY_TEST_OID)

        sync_with_svo(api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        all_metadata = self._get_all_svo_metadata(PRIMARY_TEST_INSTRUMENT)

        self.assertEqual(len(all_metadata), 2)

        oids = set([metadata['oid'] for metadata in all_metadata])
        self.assertEqual(oids, set([PRIMARY_TEST_OID, SECONDARY_TEST_OID]))

    def test_sync_data_cubes_remove_removed_entries_in_svo(self):
        """
        Remove entries locally and check that these are also removed in the SVO after synchronization.
        """
        sync_with_svo(api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        all_metadata = self._get_all_svo_metadata(PRIMARY_TEST_INSTRUMENT)

        self.assertEqual(len(all_metadata), 2)
        oids = set([metadata['oid'] for metadata in all_metadata])
        self.assertEqual(oids, set([PRIMARY_TEST_OID, SECONDARY_TEST_OID]))

        # Remove data locally.
        self.secondary_data_cube.delete()

        sync_with_svo(api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        all_metadata = self._get_all_svo_metadata(PRIMARY_TEST_INSTRUMENT)

        self.assertEqual(len(all_metadata), 1)
        oids = set([metadata['oid'] for metadata in all_metadata])
        self.assertEqual(oids, set([PRIMARY_TEST_OID]))

    def test_sync_data_cubes_update_existing_when_specified(self):
        """
        Submits cubes that already exists in the SVO when the update_existing flag is specified.
        """
        sync_with_svo(api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY)

        all_metadata = self._get_all_svo_metadata(PRIMARY_TEST_INSTRUMENT)

        self.assertEqual(len(all_metadata), 2)
        oids = set([metadata['oid'] for metadata in all_metadata])
        self.assertEqual(oids, set([PRIMARY_TEST_OID, SECONDARY_TEST_OID]))

        NEW_DATA_CUBE_SIZE = 10
        NEW_DATA_CUBE_RELEASEC = 'New Release Comment'

        # Modify data locally.
        self.primary_data_cube.size = NEW_DATA_CUBE_SIZE
        self.primary_data_cube.save()
        self.primary_data_cube.metadata.releasec = NEW_DATA_CUBE_RELEASEC
        self.primary_data_cube.metadata.save()
        self._update_fits_header(self.primary_data_cube.fits_header, 'RELEASEC', NEW_DATA_CUBE_RELEASEC)

        sync_with_svo(api_url=TEST_API_URL,
                      username=TEST_API_USER, api_key=TEST_API_KEY,
                      update_existing=True)

        all_metadata = self._get_all_svo_metadata(PRIMARY_TEST_INSTRUMENT)

        self.assertEqual(len(all_metadata), 2)
        oids = set([metadata['oid'] for metadata in all_metadata])
        self.assertEqual(oids, set([PRIMARY_TEST_OID, SECONDARY_TEST_OID]))

        primary_metadata = next(filter(lambda m: m['oid'] == PRIMARY_TEST_OID, all_metadata))

        self.assertEqual(int(primary_metadata['data_location']['file_size']), NEW_DATA_CUBE_SIZE)
        self.assertEqual(primary_metadata['releasec'], NEW_DATA_CUBE_RELEASEC)

    def _update_fits_header(self, fits_header: FITSHeader, keyword: str, value):
        """
        Replaces the value of a specific keyword inside a FITSHeader stored in the database.
        """
        hdu = fits.header.Header.fromstring(fits_header.fits_header)
        hdu[keyword] = value
        fits_header.fits_header = hdu.tostring()
        fits_header.save()

    def _get_all_svo_metadata(self, instrument):
        """
        Fetches all metadata for the provided instrument from the SVO.
        """
        dataset = self.svo_api.dataset(instrument).get()
        metadata_root_uri = dataset['metadata']['resource_uri']
        return self.svo_api(metadata_root_uri).get(limit=0)['objects']

    def _get_svo_record_metadata_for_data_cube(self, data_cube):
        """
        Fetches the metadata for the provided DataCube from the SVO. Data is fetched by the DataCube's
        'oid' field.
        """
        dataset = self.svo_api.dataset(data_cube.instrument.name).get()
        metadata_root_uri = dataset['metadata']['resource_uri']
        return self.svo_api(metadata_root_uri)(data_cube.oid).get()

    def _clear_svo(self):
        """
        Clear the SVO instance from data to ensure that previous data does not interfere with tests.
        """
        crisp_dataset = self.svo_api.dataset('CRISP').get()
        crisp_dataset_url = crisp_dataset['metadata']['resource_uri']

        metadata_elements = self.svo_api(crisp_dataset_url).get(limit=0)['objects']

        for metadata in metadata_elements:
            uri = metadata['resource_uri']
            self.svo_api(uri).delete()

        data_locations = self.svo_api.data_location.get(limit=0)['objects']

        for data_location in data_locations:
            uri = data_location['resource_uri']
            self.svo_api(uri).delete()
