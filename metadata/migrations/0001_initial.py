# Generated by Django 3.2.6 on 2021-09-01 10:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dataset', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Crisp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.CharField(db_index=True, help_text='Unique identification string for the observation metadata, usually in the form YYYYMMDDHHMMSS; cannot be modified once it is set', unique=True, verbose_name='Observation ID', max_length=255)),
                ('fits_header', models.TextField(blank=True, null=True)),
                ('date_beg', models.DateTimeField(blank=True, db_index=True, help_text='Start time of the observation [UTC]', null=True, verbose_name='DATE-BEG')),
                ('date_end', models.DateTimeField(blank=True, db_index=True, help_text='End time of the observation [UTC]', null=True, verbose_name='DATE-END')),
                ('wavemin', models.FloatField(blank=True, db_index=True, help_text='Min value of the observation spectral range [nm]', null=True, verbose_name='WAVEMIN')),
                ('wavemax', models.FloatField(blank=True, db_index=True, help_text='Max value of the observation spectral range [nm]', null=True, verbose_name='WAVEMAX')),
                ('ao_lock', models.FloatField(blank=True, help_text='Fraction of time the AO was locking, 2s average', null=True, verbose_name='AO_LOCK')),
                ('ao_nmode', models.BigIntegerField(blank=True, help_text='Number of AO corrected Mirror modes', null=True, verbose_name='AO_NMODE')),
                ('atmos_r0', models.FloatField(blank=True, help_text='Atmospheric coherence length (mean value)', null=True, verbose_name='ATMOS_R0')),
                ('btype', models.TextField(blank=True, help_text='Type of data in array', null=True, verbose_name='BTYPE')),
                ('bunit', models.TextField(blank=True, help_text='Units in array', null=True, verbose_name='BUNIT')),
                ('cadavg', models.FloatField(blank=True, help_text='Average of actual cadence', null=True, verbose_name='CADAVG')),
                ('cadmax', models.FloatField(blank=True, help_text='Maximum of actual cadence', null=True, verbose_name='CADMAX')),
                ('cadmin', models.FloatField(blank=True, help_text='Minimum of actual cadence', null=True, verbose_name='CADMIN')),
                ('cadvar', models.FloatField(blank=True, help_text='Variance of actual cadence', null=True, verbose_name='CADVAR')),
                ('camera', models.TextField(blank=True, null=True, verbose_name='CAMERA')),
                ('cdelt1', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT1')),
                ('cdelt1a', models.FloatField(blank=True, help_text='Zero FOV extent', null=True, verbose_name='CDELT1A')),
                ('cdelt2', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT2')),
                ('cdelt2a', models.FloatField(blank=True, help_text='Zero FOV extent', null=True, verbose_name='CDELT2A')),
                ('cdelt3', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT3')),
                ('cdelt4', models.BigIntegerField(blank=True, help_text='Stokes indices [1,2,3,4] --> [I,Q,U,V]', null=True, verbose_name='CDELT4')),
                ('cdelt5', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT5')),
                ('cname1', models.TextField(blank=True, null=True, verbose_name='CNAME1')),
                ('cname2', models.TextField(blank=True, null=True, verbose_name='CNAME2')),
                ('cname3', models.TextField(blank=True, null=True, verbose_name='CNAME3')),
                ('cname5', models.TextField(blank=True, null=True, verbose_name='CNAME5')),
                ('crpix1', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX1')),
                ('crpix1a', models.FloatField(blank=True, help_text='Center pixel of image array', null=True, verbose_name='CRPIX1A')),
                ('crpix2', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX2')),
                ('crpix2a', models.FloatField(blank=True, help_text='Center pixel of image array', null=True, verbose_name='CRPIX2A')),
                ('crpix3', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX3')),
                ('crpix4', models.BigIntegerField(blank=True, help_text='Index of Stokes components in pixel 1', null=True, verbose_name='CRPIX4')),
                ('crpix5', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX5')),
                ('crval1', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL1')),
                ('crval1a', models.FloatField(blank=True, help_text='Coordinates of center of image array', null=True, verbose_name='CRVAL1A')),
                ('crval2', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL2')),
                ('crval2a', models.FloatField(blank=True, help_text='Coordinates of center of image array', null=True, verbose_name='CRVAL2A')),
                ('crval3', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL3')),
                ('crval4', models.BigIntegerField(blank=True, help_text='The first Stokes index is 1', null=True, verbose_name='CRVAL4')),
                ('crval5', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL5')),
                ('csyer1', models.BigIntegerField(blank=True, help_text='Orientation unknown', null=True, verbose_name='CSYER1')),
                ('csyer2', models.BigIntegerField(blank=True, help_text='Orientation unknown', null=True, verbose_name='CSYER2')),
                ('ctype1', models.TextField(blank=True, help_text='SOLAR X', null=True, verbose_name='CTYPE1')),
                ('ctype2', models.TextField(blank=True, help_text='SOLAR Y', null=True, verbose_name='CTYPE2')),
                ('ctype3', models.TextField(blank=True, help_text='Wavelength, function of tuning and scan number', null=True, verbose_name='CTYPE3')),
                ('ctype4', models.TextField(blank=True, help_text='Stokes vector [I,Q,U,V]', null=True, verbose_name='CTYPE4')),
                ('ctype5', models.TextField(blank=True, help_text='Time, function of tuning and scan number', null=True, verbose_name='CTYPE5')),
                ('cunit1', models.TextField(blank=True, help_text='Unit along axis 1', null=True, verbose_name='CUNIT1')),
                ('cunit2', models.TextField(blank=True, help_text='Unit along axis 2', null=True, verbose_name='CUNIT2')),
                ('cunit3', models.TextField(blank=True, help_text='Wavelength unit, tabulated for dim. 3 and 5', null=True, verbose_name='CUNIT3')),
                ('cunit5', models.TextField(blank=True, null=True, verbose_name='CUNIT5')),
                ('cwdis3', models.TextField(blank=True, help_text='WAVE distortions in lookup table', null=True, verbose_name='CWDIS3')),
                ('cwerr3', models.FloatField(blank=True, help_text='Max total distortion', null=True, verbose_name='CWERR3')),
                ('datakurt', models.FloatField(blank=True, help_text='The excess kurtosis of the data (provided value', null=True, verbose_name='DATAKURT')),
                ('datamax', models.FloatField(blank=True, help_text='The maximum data value (provided value)', null=True, verbose_name='DATAMAX')),
                ('datamean', models.FloatField(blank=True, help_text='The average data value (provided value)', null=True, verbose_name='DATAMEAN')),
                ('datamedn', models.FloatField(blank=True, help_text='The 50 percentile of the data (provided value)', null=True, verbose_name='DATAMEDN')),
                ('datamin', models.FloatField(blank=True, help_text='The minimum data value (provided value)', null=True, verbose_name='DATAMIN')),
                ('datap01', models.FloatField(blank=True, help_text='The 01 percentile of the data (provided value)', null=True, verbose_name='DATAP01')),
                ('datap10', models.FloatField(blank=True, help_text='The 10 percentile of the data (provided value)', null=True, verbose_name='DATAP10')),
                ('datap25', models.FloatField(blank=True, help_text='The 25 percentile of the data (provided value)', null=True, verbose_name='DATAP25')),
                ('datap75', models.FloatField(blank=True, help_text='The 75 percentile of the data (provided value)', null=True, verbose_name='DATAP75')),
                ('datap90', models.FloatField(blank=True, help_text='The 90 percentile of the data (provided value)', null=True, verbose_name='DATAP90')),
                ('datap95', models.FloatField(blank=True, help_text='The 95 percentile of the data (provided value)', null=True, verbose_name='DATAP95')),
                ('datap98', models.FloatField(blank=True, help_text='The 98 percentile of the data (provided value)', null=True, verbose_name='DATAP98')),
                ('datap99', models.FloatField(blank=True, help_text='The 99 percentile of the data (provided value)', null=True, verbose_name='DATAP99')),
                ('datarms', models.FloatField(blank=True, help_text='The RMS deviation from the mean (provided value', null=True, verbose_name='DATARMS')),
                ('dataskew', models.FloatField(blank=True, help_text='The skewness of the data (provided value)', null=True, verbose_name='DATASKEW')),
                ('date', models.TextField(blank=True, help_text='Creation UTC date of FITS header', null=True, verbose_name='DATE')),
                ('date_avg', models.DateTimeField(blank=True, help_text='Average time of observation (provided va', null=True, verbose_name='DATE-AVG')),
                ('date_obs', models.DateTimeField(blank=True, help_text='Inferred from directory.', null=True, verbose_name='DATE-OBS')),
                ('dateref', models.TextField(blank=True, help_text='Reference time in ISO-8601', null=True, verbose_name='DATEREF')),
                ('detector', models.TextField(blank=True, null=True, verbose_name='DETECTOR')),
                ('dw3_apply', models.FloatField(blank=True, help_text='Application stage (world coordinates)', null=True, verbose_name='DW3.APPLY')),
                ('dw3_associate', models.FloatField(blank=True, help_text='Association stage (pixel coordinates)', null=True, verbose_name='DW3.ASSOCIATE')),
                ('dw3_axis1', models.BigIntegerField(blank=True, help_text='Spatial X', null=True, verbose_name='DW3 AXIS1')),
                ('dw3_axis2', models.BigIntegerField(blank=True, help_text='Spatial Y', null=True, verbose_name='DW3 AXIS2')),
                ('dw3_axis3', models.BigIntegerField(blank=True, help_text='Scan number', null=True, verbose_name='DW3 AXIS3')),
                ('dw3_axis_1', models.FloatField(blank=True, help_text='Spatial X', null=True, verbose_name='DW3.AXIS.1')),
                ('dw3_axis_2', models.FloatField(blank=True, help_text='Spatial Y', null=True, verbose_name='DW3.AXIS.2')),
                ('dw3_axis_3', models.FloatField(blank=True, help_text='Scan number', null=True, verbose_name='DW3.AXIS.3')),
                ('dw3_cwdis_lookup', models.FloatField(blank=True, help_text='Distortions in lookup table', null=True, verbose_name='DW3.CWDIS.LOOKUP')),
                ('dw3_cwerr', models.FloatField(blank=True, help_text='Max distortion (this correction step)', null=True, verbose_name='DW3 CWERR')),
                ('dw3_extver', models.FloatField(blank=True, help_text='Extension version number', null=True, verbose_name='DW3.EXTVER')),
                ('dw3_name', models.TextField(blank=True, help_text='Type of correction', null=True, verbose_name='DW3 NAME')),
                ('dw3_naxes', models.BigIntegerField(blank=True, help_text='3 axes in the lookup table', null=True, verbose_name='DW3 NAXES')),
                ('elev_ang', models.FloatField(blank=True, help_text='Elevation angle (mean value)', null=True, verbose_name='ELEV_ANG')),
                ('filename', models.TextField(blank=True, null=True, verbose_name='FILENAME')),
                ('filled', models.BigIntegerField(blank=True, help_text='Missing pixels have been filled.', null=True, verbose_name='FILLED')),
                ('filter1', models.TextField(blank=True, help_text='Inferred from filename.', null=True, verbose_name='FILTER1')),
                ('fnumsum', models.TextField(blank=True, help_text='List of frame numbers in the sum', null=True, verbose_name='FNUMSUM')),
                ('instrume', models.TextField(blank=True, help_text='Name of instrument', null=True, verbose_name='INSTRUME')),
                ('longstrn', models.TextField(blank=True, help_text='The OGIP long string convention may be used.', null=True, verbose_name='LONGSTRN')),
                ('naxis', models.BigIntegerField(blank=True, help_text='Number of data axes', null=True, verbose_name='NAXIS')),
                ('naxis1', models.BigIntegerField(blank=True, help_text='Number of positions along axis 1', null=True, verbose_name='NAXIS1')),
                ('naxis2', models.BigIntegerField(blank=True, help_text='Number of positions along axis 2', null=True, verbose_name='NAXIS2')),
                ('naxis3', models.BigIntegerField(blank=True, help_text='Number of positions along axis 3', null=True, verbose_name='NAXIS3')),
                ('naxis4', models.BigIntegerField(blank=True, help_text='Number of positions along axis 4', null=True, verbose_name='NAXIS4')),
                ('naxis5', models.BigIntegerField(blank=True, help_text='Number of positions along axis 5', null=True, verbose_name='NAXIS5')),
                ('npixels', models.BigIntegerField(blank=True, help_text='Number of pixels (provided value)', null=True, verbose_name='NPIXELS')),
                ('nsumexp', models.FloatField(blank=True, help_text='Number of summed exposures (median value)', null=True, verbose_name='NSUMEXP')),
                ('object', models.TextField(blank=True, null=True, verbose_name='OBJECT')),
                ('obs_hdu', models.BigIntegerField(blank=True, null=True, verbose_name='OBS_HDU')),
                ('observer', models.TextField(blank=True, null=True, verbose_name='OBSERVER')),
                ('obsgeo_x', models.BigIntegerField(blank=True, help_text='SST location', null=True, verbose_name='OBSGEO-X')),
                ('obsgeo_y', models.BigIntegerField(blank=True, help_text='SST location', null=True, verbose_name='OBSGEO-Y')),
                ('obsgeo_z', models.BigIntegerField(blank=True, help_text='SST location', null=True, verbose_name='OBSGEO-Z')),
                ('obsrvtry', models.TextField(blank=True, help_text='Name of observatory', null=True, verbose_name='OBSRVTRY')),
                ('pc1_1', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC1_1')),
                ('pc2_2', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC2_2')),
                ('pc3_3', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC3_3')),
                ('pc4_4', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC4_4')),
                ('pc5_5', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC5_5')),
                ('prbra1', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA1')),
                ('prbra2', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA2')),
                ('prbra3', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA3')),
                ('prbra4', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA4')),
                ('prbra5', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA5')),
                ('prbra6', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA6')),
                ('prlib1', models.TextField(blank=True, help_text='Software library', null=True, verbose_name='PRLIB1')),
                ('prlib1a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1A')),
                ('prlib1b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1B')),
                ('prlib1c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1C')),
                ('prlib1d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1D')),
                ('prlib1e', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1E')),
                ('prlib2', models.TextField(blank=True, help_text='Software library containing red::make_wb_cube', null=True, verbose_name='PRLIB2')),
                ('prlib2a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2A')),
                ('prlib2b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2B')),
                ('prlib2c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2C')),
                ('prlib2d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2D')),
                ('prlib3', models.TextField(blank=True, help_text='Software library containing crisp::demodulate', null=True, verbose_name='PRLIB3')),
                ('prlib3a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3A')),
                ('prlib3b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3B')),
                ('prlib3c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3C')),
                ('prlib3d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3D')),
                ('prlib4', models.TextField(blank=True, help_text='Software library containing crisp::make_nb_cube', null=True, verbose_name='PRLIB4')),
                ('prlib4a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4A')),
                ('prlib4b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4B')),
                ('prlib4c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4C')),
                ('prlib4d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4D')),
                ('prlib5', models.TextField(blank=True, help_text='Software library containing red::fitscube_cross', null=True, verbose_name='PRLIB5')),
                ('prlib5a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB5A')),
                ('prlib5b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB5B')),
                ('prlib5c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB5C')),
                ('prlib5d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB5D')),
                ('prlib6', models.TextField(blank=True, help_text='Software library containing red::fitscube_expor', null=True, verbose_name='PRLIB6')),
                ('prlib6a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB6A')),
                ('prlib6b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB6B')),
                ('prlib6c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB6C')),
                ('prlib6d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB6D')),
                ('prmode1', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE1')),
                ('prmode3', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE3')),
                ('prmode4', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE4')),
                ('prmode5', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE5')),
                ('prmode6', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE6')),
                ('prpara1', models.TextField(blank=True, help_text='List of parameters/options for PRPROC1', null=True, verbose_name='PRPARA1')),
                ('prpara2', models.TextField(blank=True, help_text='List o', null=True, verbose_name='PRPARA2')),
                ('prpara3', models.TextField(blank=True, help_text='List of parameters/options for PRPROC2', null=True, verbose_name='PRPARA3')),
                ('prpara4', models.TextField(blank=True, help_text='List of parameters/options for PRPROC4', null=True, verbose_name='PRPARA4')),
                ('prpara6', models.TextField(blank=True, help_text='List of parameters/options for PRPROC6', null=True, verbose_name='PRPARA6')),
                ('prproc2', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC2')),
                ('prproc3', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC3')),
                ('prproc4', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC4')),
                ('prproc5', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC5')),
                ('prproc6', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC6')),
                ('prstep1', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP1')),
                ('prstep2', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP2')),
                ('prstep3', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP3')),
                ('prstep4', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP4')),
                ('prstep5', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP5')),
                ('prstep6', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP6')),
                ('prver1', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1')),
                ('prver1a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1A')),
                ('prver1b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1B')),
                ('prver1c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1C')),
                ('prver1d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1D')),
                ('prver1e', models.TextField(blank=True, help_text='Library version/MJD of last update (From .momfb', null=True, verbose_name='PRVER1E')),
                ('prver2', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2')),
                ('prver2a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2A')),
                ('prver2b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2B')),
                ('prver2c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2C')),
                ('prver2d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2D')),
                ('prver3', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3')),
                ('prver3a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3A')),
                ('prver3b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3B')),
                ('prver3c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3C')),
                ('prver3d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3D')),
                ('prver4', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4')),
                ('prver4a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4A')),
                ('prver4b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4B')),
                ('prver4c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4C')),
                ('prver4d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4D')),
                ('prver5', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER5')),
                ('prver5a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER5A')),
                ('prver5b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER5B')),
                ('prver5c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER5C')),
                ('prver5d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER5D')),
                ('prver6', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER6')),
                ('prver6a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER6A')),
                ('prver6b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER6B')),
                ('prver6c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER6C')),
                ('prver6d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER6D')),
                ('ps1_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS1_0')),
                ('ps1_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS1_1')),
                ('ps1_2', models.TextField(blank=True, help_text='TTYPE for INDEX', null=True, verbose_name='PS1_2')),
                ('ps2_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS2_0')),
                ('ps2_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS2_1')),
                ('ps2_2', models.TextField(blank=True, help_text='TTYPE for INDEX', null=True, verbose_name='PS2_2')),
                ('ps3_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS3_0')),
                ('ps3_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS3_1')),
                ('ps5_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS5_0')),
                ('ps5_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS5_1')),
                ('pv1_3', models.BigIntegerField(blank=True, help_text='Coord. 1 tabulated coordinate number', null=True, verbose_name='PV1_3')),
                ('pv2_3', models.BigIntegerField(blank=True, help_text='Coord. 2 tabulated coordinate number', null=True, verbose_name='PV2_3')),
                ('pv3_3', models.BigIntegerField(blank=True, help_text='Coord. 3 tabulated coordinate number', null=True, verbose_name='PV3_3')),
                ('pv5_3', models.BigIntegerField(blank=True, help_text='Coord. 5 tabulated coordinate number', null=True, verbose_name='PV5_3')),
                ('release', models.TextField(blank=True, null=True, verbose_name='RELEASE')),
                ('releasec', models.TextField(blank=True, null=True, verbose_name='RELEASEC')),
                ('requestr', models.TextField(blank=True, null=True, verbose_name='REQUESTR')),
                ('scannum', models.BigIntegerField(blank=True, help_text='Scan number (first value)', null=True, verbose_name='SCANNUM')),
                ('solarnet', models.FloatField(blank=True, help_text='Fully SOLARNET-compliant=1.0, partially=0.5', null=True, verbose_name='SOLARNET')),
                ('startobs', models.DateTimeField(blank=True, null=True, verbose_name='STARTOBS')),
                ('telconfg', models.TextField(blank=True, help_text='Telescope configuration', null=True, verbose_name='TELCONFG')),
                ('telescop', models.TextField(blank=True, help_text='Name of telescope', null=True, verbose_name='TELESCOP')),
                ('texposur', models.FloatField(blank=True, help_text='Single-exposure time (median value)', null=True, verbose_name='TEXPOSUR')),
                ('timesys', models.TextField(blank=True, null=True, verbose_name='TIMESYS')),
                ('var_keys', models.TextField(blank=True, help_text='SOLARNET variable-keywords', null=True, verbose_name='VAR_KEYS')),
                ('waveband', models.TextField(blank=True, null=True, verbose_name='WAVEBAND')),
                ('wavelnth', models.FloatField(blank=True, help_text='Prefilter peak wavelength', null=True, verbose_name='WAVELNTH')),
                ('waveunit', models.BigIntegerField(blank=True, help_text='WAVELNTH in units 10^WAVEUNIT m = nm', null=True, verbose_name='WAVEUNIT')),
                ('wcsnamea', models.TextField(blank=True, null=True, verbose_name='WCSNAMEA')),
                ('xposure', models.FloatField(blank=True, help_text='Summed exposure times (median value)', null=True, verbose_name='XPOSURE')),
                ('data_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metadata_crisp', to='dataset.datalocation')),
            ],
            options={
                'verbose_name': 'CRISP metadata',
                'verbose_name_plural': 'CRISP metadata',
                'ordering': ['date_beg'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chromis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.CharField(db_index=True, help_text='Unique identification string for the observation metadata, usually in the form YYYYMMDDHHMMSS; cannot be modified once it is set', unique=True, verbose_name='Observation ID', max_length=255)),
                ('fits_header', models.TextField(blank=True, null=True)),
                ('date_beg', models.DateTimeField(blank=True, db_index=True, help_text='Start time of the observation [UTC]', null=True, verbose_name='DATE-BEG')),
                ('date_end', models.DateTimeField(blank=True, db_index=True, help_text='End time of the observation [UTC]', null=True, verbose_name='DATE-END')),
                ('wavemin', models.FloatField(blank=True, db_index=True, help_text='Min value of the observation spectral range [nm]', null=True, verbose_name='WAVEMIN')),
                ('wavemax', models.FloatField(blank=True, db_index=True, help_text='Max value of the observation spectral range [nm]', null=True, verbose_name='WAVEMAX')),
                ('ao_lock', models.FloatField(blank=True, help_text='Fraction of time the AO was locking, 2s average', null=True, verbose_name='AO_LOCK')),
                ('ao_nmode', models.BigIntegerField(blank=True, help_text='Number of AO corrected Mirror modes', null=True, verbose_name='AO_NMODE')),
                ('atmos_r0', models.FloatField(blank=True, help_text='Atmospheric coherence length (mean value)', null=True, verbose_name='ATMOS_R0')),
                ('btype', models.TextField(blank=True, help_text='Type of data in array', null=True, verbose_name='BTYPE')),
                ('bunit', models.TextField(blank=True, help_text='Units in array', null=True, verbose_name='BUNIT')),
                ('cadavg', models.FloatField(blank=True, help_text='Average of actual cadence', null=True, verbose_name='CADAVG')),
                ('cadmax', models.FloatField(blank=True, help_text='Maximum of actual cadence', null=True, verbose_name='CADMAX')),
                ('cadmin', models.FloatField(blank=True, help_text='Minimum of actual cadence', null=True, verbose_name='CADMIN')),
                ('cadvar', models.FloatField(blank=True, help_text='Variance of actual cadence', null=True, verbose_name='CADVAR')),
                ('camera', models.TextField(blank=True, null=True, verbose_name='CAMERA')),
                ('cdelt1', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT1')),
                ('cdelt1a', models.FloatField(blank=True, help_text='Zero FOV extent', null=True, verbose_name='CDELT1A')),
                ('cdelt2', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT2')),
                ('cdelt2a', models.FloatField(blank=True, help_text='Zero FOV extent', null=True, verbose_name='CDELT2A')),
                ('cdelt3', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT3')),
                ('cdelt4', models.BigIntegerField(blank=True, help_text='Stokes indices [1,2,3,4] --> [I,Q,U,V]', null=True, verbose_name='CDELT4')),
                ('cdelt5', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CDELT5')),
                ('cname1', models.TextField(blank=True, null=True, verbose_name='CNAME1')),
                ('cname2', models.TextField(blank=True, null=True, verbose_name='CNAME2')),
                ('cname3', models.TextField(blank=True, null=True, verbose_name='CNAME3')),
                ('cname5', models.TextField(blank=True, null=True, verbose_name='CNAME5')),
                ('crpix1', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX1')),
                ('crpix1a', models.FloatField(blank=True, help_text='Center pixel of image array', null=True, verbose_name='CRPIX1A')),
                ('crpix2', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX2')),
                ('crpix2a', models.FloatField(blank=True, help_text='Center pixel of image array', null=True, verbose_name='CRPIX2A')),
                ('crpix3', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX3')),
                ('crpix4', models.BigIntegerField(blank=True, help_text='Index of Stokes components in pixel 1', null=True, verbose_name='CRPIX4')),
                ('crpix5', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRPIX5')),
                ('crval1', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL1')),
                ('crval1a', models.FloatField(blank=True, help_text='Coordinates of center of image array', null=True, verbose_name='CRVAL1A')),
                ('crval2', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL2')),
                ('crval2a', models.FloatField(blank=True, help_text='Coordinates of center of image array', null=True, verbose_name='CRVAL2A')),
                ('crval3', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL3')),
                ('crval4', models.BigIntegerField(blank=True, help_text='The first Stokes index is 1', null=True, verbose_name='CRVAL4')),
                ('crval5', models.BigIntegerField(blank=True, help_text='Unity transform', null=True, verbose_name='CRVAL5')),
                ('csyer1', models.BigIntegerField(blank=True, help_text='Orientation unknown', null=True, verbose_name='CSYER1')),
                ('csyer2', models.BigIntegerField(blank=True, help_text='Orientation unknown', null=True, verbose_name='CSYER2')),
                ('ctype1', models.TextField(blank=True, help_text='SOLAR X', null=True, verbose_name='CTYPE1')),
                ('ctype2', models.TextField(blank=True, help_text='SOLAR Y', null=True, verbose_name='CTYPE2')),
                ('ctype3', models.TextField(blank=True, help_text='Wavelength, function of tuning and scan number', null=True, verbose_name='CTYPE3')),
                ('ctype4', models.TextField(blank=True, help_text='Stokes vector [I,Q,U,V]', null=True, verbose_name='CTYPE4')),
                ('ctype5', models.TextField(blank=True, help_text='Time, function of tuning and scan number', null=True, verbose_name='CTYPE5')),
                ('cunit1', models.TextField(blank=True, help_text='Unit along axis 1', null=True, verbose_name='CUNIT1')),
                ('cunit2', models.TextField(blank=True, help_text='Unit along axis 2', null=True, verbose_name='CUNIT2')),
                ('cunit3', models.TextField(blank=True, help_text='Wavelength unit, tabulated for dim. 3 and 5', null=True, verbose_name='CUNIT3')),
                ('cunit5', models.TextField(blank=True, null=True, verbose_name='CUNIT5')),
                ('cwdis3', models.TextField(blank=True, help_text='WAVE distortions in lookup table', null=True, verbose_name='CWDIS3')),
                ('cwerr3', models.FloatField(blank=True, help_text='Max total distortion', null=True, verbose_name='CWERR3')),
                ('datakurt', models.FloatField(blank=True, help_text='The kurtosis (provided value)', null=True, verbose_name='DATAKURT')),
                ('datamax', models.FloatField(blank=True, help_text='The maximum data value (provided value)', null=True, verbose_name='DATAMAX')),
                ('datamean', models.FloatField(blank=True, help_text='The average data value (provided value)', null=True, verbose_name='DATAMEAN')),
                ('datamedn', models.FloatField(blank=True, help_text='The median data value (provided value)', null=True, verbose_name='DATAMEDN')),
                ('datamin', models.FloatField(blank=True, help_text='The minimum data value (provided value)', null=True, verbose_name='DATAMIN')),
                ('datap01', models.FloatField(blank=True, help_text='The 01 percentile (provided value)', null=True, verbose_name='DATAP01')),
                ('datap10', models.FloatField(blank=True, help_text='The 10 percentile (provided value)', null=True, verbose_name='DATAP10')),
                ('datap25', models.FloatField(blank=True, help_text='The 25 percentile (provided value)', null=True, verbose_name='DATAP25')),
                ('datap75', models.FloatField(blank=True, help_text='The 75 percentile (provided value)', null=True, verbose_name='DATAP75')),
                ('datap90', models.FloatField(blank=True, help_text='The 90 percentile (provided value)', null=True, verbose_name='DATAP90')),
                ('datap95', models.FloatField(blank=True, help_text='The 95 percentile (provided value)', null=True, verbose_name='DATAP95')),
                ('datap98', models.FloatField(blank=True, help_text='The 98 percentile (provided value)', null=True, verbose_name='DATAP98')),
                ('datap99', models.FloatField(blank=True, help_text='The 99 percentile (provided value)', null=True, verbose_name='DATAP99')),
                ('datarms', models.FloatField(blank=True, help_text='The RMS deviation from the mean (provided value', null=True, verbose_name='DATARMS')),
                ('dataskew', models.FloatField(blank=True, help_text='The skewness (provided value)', null=True, verbose_name='DATASKEW')),
                ('date', models.DateTimeField(blank=True, help_text='Creation UTC date of FITS header', null=True, verbose_name='DATE')),
                ('date_avg', models.DateTimeField(blank=True, help_text='Average time of observation (provided value)', null=True, verbose_name='DATE-AVG')),
                ('date_obs', models.DateTimeField(blank=True, help_text='Inferred from directory.', null=True, verbose_name='DATE-OBS')),
                ('dateref', models.DateTimeField(blank=True, help_text='Reference time in ISO-8601', null=True, verbose_name='DATEREF')),
                ('detector', models.TextField(blank=True, help_text='Inferred from filename.', null=True, verbose_name='DETECTOR')),
                ('detfirm', models.TextField(blank=True, null=True, verbose_name='DETFIRM')),
                ('detgain', models.FloatField(blank=True, help_text='or camera specific unit', null=True, verbose_name='DETGAIN')),
                ('detmodel', models.TextField(blank=True, null=True, verbose_name='DETMODEL')),
                ('detoffs', models.BigIntegerField(blank=True, help_text='or camera specific unit', null=True, verbose_name='DETOFFS')),
                ('dw3_apply', models.FloatField(blank=True, help_text='Application stage (world coordinates)', null=True, verbose_name='DW3.APPLY')),
                ('dw3_associate', models.FloatField(blank=True, help_text='Association stage (pixel coordinates)', null=True, verbose_name='DW3.ASSOCIATE')),
                ('dw3_axis1', models.BigIntegerField(blank=True, help_text='Spatial X', null=True, verbose_name='DW3 AXIS1')),
                ('dw3_axis2', models.BigIntegerField(blank=True, help_text='Spatial Y', null=True, verbose_name='DW3 AXIS2')),
                ('dw3_axis3', models.BigIntegerField(blank=True, help_text='Scan number', null=True, verbose_name='DW3 AXIS3')),
                ('dw3_axis_1', models.FloatField(blank=True, help_text='Spatial X', null=True, verbose_name='DW3.AXIS.1')),
                ('dw3_axis_2', models.FloatField(blank=True, help_text='Spatial Y', null=True, verbose_name='DW3.AXIS.2')),
                ('dw3_axis_3', models.FloatField(blank=True, help_text='Scan number', null=True, verbose_name='DW3.AXIS.3')),
                ('dw3_cwdis_lookup', models.FloatField(blank=True, help_text='Distortions in lookup table', null=True, verbose_name='DW3.CWDIS.LOOKUP')),
                ('dw3_cwerr', models.FloatField(blank=True, help_text='Max distortion (this correction step)', null=True, verbose_name='DW3 CWERR')),
                ('dw3_extver', models.FloatField(blank=True, help_text='Extension version number', null=True, verbose_name='DW3.EXTVER')),
                ('dw3_name', models.TextField(blank=True, help_text='Type of correction', null=True, verbose_name='DW3 NAME')),
                ('dw3_naxes', models.BigIntegerField(blank=True, help_text='3 axes in the lookup table', null=True, verbose_name='DW3 NAXES')),
                ('elev_ang', models.FloatField(blank=True, help_text='Elevation angle (mean value)', null=True, verbose_name='ELEV_ANG')),
                ('extname', models.TextField(blank=True, null=True, verbose_name='EXTNAME')),
                ('filename', models.TextField(blank=True, null=True, verbose_name='FILENAME')),
                ('filled', models.BigIntegerField(blank=True, help_text='Missing pixels have been filled.', null=True, verbose_name='FILLED')),
                ('filter1', models.TextField(blank=True, help_text='Inferred from filename.', null=True, verbose_name='FILTER1')),
                ('instrume', models.TextField(blank=True, help_text='Name of instrument', null=True, verbose_name='INSTRUME')),
                ('longstrn', models.TextField(blank=True, help_text='The OGIP long string convention may be used.', null=True, verbose_name='LONGSTRN')),
                ('naxis', models.BigIntegerField(blank=True, help_text='Number of data axes', null=True, verbose_name='NAXIS')),
                ('naxis1', models.BigIntegerField(blank=True, help_text='Number of positions along axis 1', null=True, verbose_name='NAXIS1')),
                ('naxis2', models.BigIntegerField(blank=True, help_text='Number of positions along axis 2', null=True, verbose_name='NAXIS2')),
                ('naxis3', models.BigIntegerField(blank=True, help_text='Number of positions along axis 3', null=True, verbose_name='NAXIS3')),
                ('naxis4', models.BigIntegerField(blank=True, help_text='Number of positions along axis 4', null=True, verbose_name='NAXIS4')),
                ('naxis5', models.BigIntegerField(blank=True, help_text='Number of positions along axis 5', null=True, verbose_name='NAXIS5')),
                ('nsumexp', models.FloatField(blank=True, help_text='Number of summed exposures (median value)', null=True, verbose_name='NSUMEXP')),
                ('object', models.TextField(blank=True, null=True, verbose_name='OBJECT')),
                ('obs_hdu', models.BigIntegerField(blank=True, help_text='Observational Header and Data Unit', null=True, verbose_name='OBS_HDU')),
                ('observer', models.TextField(blank=True, null=True, verbose_name='OBSERVER')),
                ('obsgeo_x', models.BigIntegerField(blank=True, help_text='SST location', null=True, verbose_name='OBSGEO-X')),
                ('obsgeo_y', models.BigIntegerField(blank=True, help_text='SST location', null=True, verbose_name='OBSGEO-Y')),
                ('obsgeo_z', models.BigIntegerField(blank=True, help_text='SST location', null=True, verbose_name='OBSGEO-Z')),
                ('obsrvtry', models.TextField(blank=True, help_text='Name of observatory', null=True, verbose_name='OBSRVTRY')),
                ('origin', models.TextField(blank=True, null=True, verbose_name='ORIGIN')),
                ('pc1_1', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC1_1')),
                ('pc2_2', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC2_2')),
                ('pc3_3', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC3_3')),
                ('pc4_4', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC4_4')),
                ('pc5_5', models.FloatField(blank=True, help_text='No rotations', null=True, verbose_name='PC5_5')),
                ('prbra1', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA1')),
                ('prbra2', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA2')),
                ('prbra3', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA3')),
                ('prbra4', models.TextField(blank=True, help_text='Version control branch', null=True, verbose_name='PRBRA4')),
                ('prlib1', models.TextField(blank=True, help_text='Software library', null=True, verbose_name='PRLIB1')),
                ('prlib1a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1A')),
                ('prlib1b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1B')),
                ('prlib1c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1C')),
                ('prlib1d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1D')),
                ('prlib1e', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB1E')),
                ('prlib2', models.TextField(blank=True, help_text='Software library containing chromis::make_wb_cu', null=True, verbose_name='PRLIB2')),
                ('prlib2a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2A')),
                ('prlib2b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2B')),
                ('prlib2c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2C')),
                ('prlib2d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB2D')),
                ('prlib3', models.TextField(blank=True, help_text='Software library containing chromis::make_nb_cu', null=True, verbose_name='PRLIB3')),
                ('prlib3a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3A')),
                ('prlib3b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3B')),
                ('prlib3c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3C')),
                ('prlib3d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB3D')),
                ('prlib4', models.TextField(blank=True, help_text='Software library containing red::fitscube_expor', null=True, verbose_name='PRLIB4')),
                ('prlib4a', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4A')),
                ('prlib4b', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4B')),
                ('prlib4c', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4C')),
                ('prlib4d', models.TextField(blank=True, help_text='Additional software library', null=True, verbose_name='PRLIB4D')),
                ('prmode1', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE1')),
                ('prmode2', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE2')),
                ('prmode3', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE3')),
                ('prmode4', models.TextField(blank=True, help_text='Processing mode', null=True, verbose_name='PRMODE4')),
                ('prpara1', models.TextField(blank=True, help_text='List of parameters/options for PRPROC1', null=True, verbose_name='PRPARA1')),
                ('prpara2', models.TextField(blank=True, help_text='List of parameters/opt', null=True, verbose_name='PRPARA2')),
                ('prpara3', models.TextField(blank=True, help_text='List of parameters/options for PRPROC2', null=True, verbose_name='PRPARA3')),
                ('prpara4', models.TextField(blank=True, help_text='List of parameters/options for PRPROC4', null=True, verbose_name='PRPARA4')),
                ('prproc2', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC2')),
                ('prproc3', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC3')),
                ('prproc4', models.TextField(blank=True, help_text='Name of procedure used', null=True, verbose_name='PRPROC4')),
                ('prstep1', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP1')),
                ('prstep2', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP2')),
                ('prstep3', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP3')),
                ('prstep4', models.TextField(blank=True, help_text='Processing step name', null=True, verbose_name='PRSTEP4')),
                ('prver1', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1')),
                ('prver1a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1A')),
                ('prver1b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1B')),
                ('prver1c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1C')),
                ('prver1d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER1D')),
                ('prver1e', models.TextField(blank=True, help_text='Library version/MJD of last update (From .momfb', null=True, verbose_name='PRVER1E')),
                ('prver2', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2')),
                ('prver2a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2A')),
                ('prver2b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2B')),
                ('prver2c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2C')),
                ('prver2d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER2D')),
                ('prver3', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3')),
                ('prver3a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3A')),
                ('prver3b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3B')),
                ('prver3c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3C')),
                ('prver3d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER3D')),
                ('prver4', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4')),
                ('prver4a', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4A')),
                ('prver4b', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4B')),
                ('prver4c', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4C')),
                ('prver4d', models.TextField(blank=True, help_text='Library version/MJD of last update', null=True, verbose_name='PRVER4D')),
                ('ps1_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS1_0')),
                ('ps1_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS1_1')),
                ('ps1_2', models.TextField(blank=True, help_text='TTYPE for INDEX', null=True, verbose_name='PS1_2')),
                ('ps2_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS2_0')),
                ('ps2_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS2_1')),
                ('ps2_2', models.TextField(blank=True, help_text='TTYPE for INDEX', null=True, verbose_name='PS2_2')),
                ('ps3_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS3_0')),
                ('ps3_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS3_1')),
                ('ps5_0', models.TextField(blank=True, help_text='EXTNAME; EXTVER=EXTLEVEL=1 is default', null=True, verbose_name='PS5_0')),
                ('ps5_1', models.TextField(blank=True, help_text='TTYPE for column w/coordinates', null=True, verbose_name='PS5_1')),
                ('pv1_3', models.BigIntegerField(blank=True, help_text='Coord. 1 tabulated coordinate number', null=True, verbose_name='PV1_3')),
                ('pv2_3', models.BigIntegerField(blank=True, help_text='Coord. 2 tabulated coordinate number', null=True, verbose_name='PV2_3')),
                ('pv3_3', models.BigIntegerField(blank=True, help_text='Coord. 3 tabulated coordinate number', null=True, verbose_name='PV3_3')),
                ('pv5_3', models.BigIntegerField(blank=True, help_text='Coord. 5 tabulated coordinate number', null=True, verbose_name='PV5_3')),
                ('release', models.TextField(blank=True, null=True, verbose_name='RELEASE')),
                ('releasec', models.TextField(blank=True, null=True, verbose_name='RELEASEC')),
                ('requestr', models.TextField(blank=True, null=True, verbose_name='REQUESTR')),
                ('scannum', models.BigIntegerField(blank=True, help_text='Scan number (first value)', null=True, verbose_name='SCANNUM')),
                ('solarnet', models.FloatField(blank=True, null=True, verbose_name='SOLARNET')),
                ('startobs', models.DateTimeField(blank=True, null=True, verbose_name='STARTOBS')),
                ('telconfg', models.TextField(blank=True, help_text='Telescope configuration', null=True, verbose_name='TELCONFG')),
                ('telescop', models.TextField(blank=True, help_text='Name of telescope', null=True, verbose_name='TELESCOP')),
                ('texposur', models.FloatField(blank=True, help_text='Single-exposure time (median value)', null=True, verbose_name='TEXPOSUR')),
                ('timesys', models.TextField(blank=True, null=True, verbose_name='TIMESYS')),
                ('var_keys', models.TextField(blank=True, help_text='SOLARNET variable-keywords', null=True, verbose_name='VAR_KEYS')),
                ('waveband', models.TextField(blank=True, null=True, verbose_name='WAVEBAND')),
                ('wavelnth', models.FloatField(blank=True, help_text='Prefilter peak wavelength', null=True, verbose_name='WAVELNTH')),
                ('waveunit', models.BigIntegerField(blank=True, help_text='WAVELNTH in units 10^WAVEUNIT m = nm', null=True, verbose_name='WAVEUNIT')),
                ('wcsnamea', models.TextField(blank=True, null=True, verbose_name='WCSNAMEA')),
                ('xposure', models.FloatField(blank=True, help_text='Summed exposure times (median value)', null=True, verbose_name='XPOSURE')),
                ('data_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metadata_chromis', to='dataset.datalocation')),
            ],
            options={
                'verbose_name': 'CHROMIS metadata',
                'verbose_name_plural': 'CHROMIS metadata',
                'ordering': ['date_beg'],
                'abstract': False,
            },
        ),
    ]
