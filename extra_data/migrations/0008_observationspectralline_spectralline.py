# Generated by Django 3.2.6 on 2021-09-22 10:28

from django.db import migrations, models
import django.db.models.deletion


def create_spectral_line_rows(apps, schema_editor):
    CombinedMetadata = apps.get_model('metadata', 'CombinedMetadata')
    SpectralLine = apps.get_model('extra_data', 'SpectralLine')
    ObservationSpectralLine = apps.get_model('extra_data', 'ObservationSpectralLine')

    for metadata in CombinedMetadata.objects.all():
        if metadata.filter1 and metadata.waveband:
            spectral_line, created = SpectralLine.objects.get_or_create(wavelength=metadata.filter1, waveband=metadata.waveband)
            print(spectral_line)
            obs_spectral_line, created = ObservationSpectralLine.objects.get_or_create(data_location=metadata.data_location, spectral_line=spectral_line)


class Migration(migrations.Migration):

    dependencies = [
        ('dataset', '0004_auto_20210915_1342'),
        ('extra_data', '0007_alter_imagepreview_data_location'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpectralLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wavelength', models.IntegerField(verbose_name='Wavelength (Ã…)')),
                ('waveband', models.CharField(max_length=50, verbose_name='Waveband Name')),
            ],
            options={
                'unique_together': {('wavelength', 'waveband')},
            },
        ),
        migrations.CreateModel(
            name='ObservationSpectralLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='spectral_line', to='dataset.datalocation')),
                ('spectral_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='extra_data.spectralline')),
            ],
        ),
        migrations.RunPython(
            create_spectral_line_rows
        ),
    ]
